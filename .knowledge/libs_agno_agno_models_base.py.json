{"is_source_file": true, "format": "Python", "description": "This file defines an abstract base class 'Model' for AI models, including methods for generating responses, handling streaming responses, executing functions, and managing internal state. It also includes data structures for message handling and utility functions for logging and metrics.", "external_files": ["agno.exceptions", "agno.media", "agno.models.message", "agno.models.response", "agno.run.response", "agno.run.team", "agno.tools.function", "agno.utils.log", "agno.utils.timer", "agno.utils.tools"], "external_methods": ["agno.exceptions.AgentRunException", "agno.media.AudioResponse", "agno.media.ImageArtifact", "agno.models.message.Citations", "agno.models.message.Message", "agno.models.message.MessageMetrics", "agno.models.response.ModelResponse", "agno.models.response.ModelResponseEvent", "agno.models.response.ToolExecution", "agno.run.response.RunResponseContentEvent", "agno.run.response.RunResponseEvent", "agno.run.team.RunResponseContentEvent", "agno.run.team.TeamRunResponseEvent", "agno.tools.function.Function", "agno.tools.function.FunctionCall", "agno.tools.function.FunctionExecutionResult", "agno.tools.function.UserInputField", "agno.utils.log.log_debug", "agno.utils.log.log_error", "agno.utils.log.log_warning", "agno.utils.timer.Timer", "agno.utils.tools.get_function_call_for_tool_call", "agno.utils.tools.get_function_call_for_tool_execution"], "published": ["MessageData", "Message", "Model", "AgentRunException", "AudioResponse", "ImageArtifact", "Citations", "MessageMetrics", "ModelResponse", "ModelResponseEvent", "ToolExecution", "RunResponseContentEvent", "RunResponseEvent", "TeamRunResponseContentEvent", "TeamRunResponseEvent", "Function", "FunctionCall", "FunctionExecutionResult", "UserInputField"], "classes": [{"name": "MessageData", "description": "Data structure for streaming message content, including response content, citations, tool calls, audio, image, provider data, and extra info."}, {"name": "Model", "description": "Abstract base class for AI models, providing methods for response generation, streaming, function execution, and response parsing."}], "methods": [{"name": "_log_messages", "description": "Logs messages for debugging purposes."}, {"name": "_add_usage_metrics_to_assistant_message", "description": "Adds usage metrics from the model provider response to the assistant message."}, {"name": "_handle_agent_exception", "description": "Handles AgentRunException by appending relevant messages and setting stop flags."}, {"name": "invoke", "description": "Abstract method to invoke the model synchronously."}, {"name": "ainvoke", "description": "Abstract method to invoke the model asynchronously."}, {"name": "invoke_stream", "description": "Abstract method to stream responses from the model synchronously."}, {"name": "ainvoke_stream", "description": "Abstract method to stream responses from the model asynchronously."}, {"name": "parse_provider_response", "description": "Abstract method to parse raw provider response into ModelResponse."}, {"name": "parse_provider_response_delta", "description": "Abstract method to parse streaming response chunks into ModelResponse."}, {"name": "response", "description": "Generates a response from the model based on input messages, handling function calls and tool integrations."}, {"name": "aresponse", "description": "Asynchronous version of response method."}, {"name": "_process_model_response", "description": "Processes a single model response, populating the assistant message and updating the model response."}, {"name": "_aprocess_model_response", "description": "Asynchronous version of _process_model_response."}, {"name": "_populate_assistant_message", "description": "Populates an assistant message with data from the provider response."}, {"name": "process_response_stream", "description": "Handles streaming responses, updating stream data and assistant message."}, {"name": "response_stream", "description": "Generates a streaming response, handling function calls and message updates."}, {"name": "aprocess_response_stream", "description": "Asynchronous version of process_response_stream."}, {"name": "aresponse_stream", "description": "Asynchronous generator for streaming responses, handling function calls and message updates."}, {"name": "_populate_stream_data_and_assistant_message", "description": "Updates stream data and assistant message with response delta during streaming."}, {"name": "parse_tool_calls", "description": "Parses raw tool call data into structured tool calls."}, {"name": "get_function_call_to_run_from_tool_execution", "description": "Converts a ToolExecution into a FunctionCall for execution."}, {"name": "get_function_calls_to_run", "description": "Prepares a list of FunctionCall objects from assistant message tool calls."}, {"name": "create_function_call_result", "description": "Creates a Message representing the result of a function call."}, {"name": "create_tool_call_limit_error_result", "description": "Creates a Message indicating a tool call limit has been reached."}, {"name": "run_function_call", "description": "Executes a single FunctionCall, yields events, and returns the result."}, {"name": "run_function_calls", "description": "Runs multiple FunctionCalls sequentially, handling pause and external execution."}, {"name": "arun_function_call", "description": "Asynchronously executes a single FunctionCall, returning success, timer, and call."}, {"name": "arun_function_calls", "description": "Asynchronously executes multiple FunctionCalls, handling pause, external, and user input."}, {"name": "_prepare_function_calls", "description": "Prepares function calls from tool calls in the assistant message."}, {"name": "format_function_call_results", "description": "Appends function call results to the message list."}, {"name": "get_system_message_for_model", "description": "Returns the system prompt for the model."}, {"name": "get_instructions_for_model", "description": "Returns instructions for the model."}, {"name": "__deepcopy__", "description": "Creates a deep copy of the Model instance."}], "calls": ["log_debug", "log_error", "log_warning", "get_function_call_for_tool_call", "get_function_call_for_tool_execution", "asyncio.to_thread", "asyncio.gather"], "search-terms": ["abstract base class", "response generation", "streaming responses", "function execution", "tool calls", "model response parsing", "async methods", "response handling"], "state": 2, "file_id": 219, "knowledge_revision": 2568, "git_revision": "f383be733b73324e24b14c85bdd78f927e8959a8", "ctags": [], "filename": "libs/agno/agno/models/base.py", "hash": "af3e0b492e944500575c0adaa2f88d6e", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2568": "f383be733b73324e24b14c85bdd78f927e8959a8"}]}