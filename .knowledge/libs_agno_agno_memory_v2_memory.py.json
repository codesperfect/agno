{"is_source_file": true, "format": "Python", "description": "This file defines classes and methods for managing in-memory storage, retrieval, and manipulation of user memories, session summaries, and team interactions within a larger AI system. It includes data models, utility functions, and core logic for handling memories, sessions, and team contexts.", "external_files": ["agno.media", "agno.memory.v2.db.base", "agno.memory.v2.db.schema", "agno.memory.v2.manager", "agno.memory.v2.schema", "agno.memory.v2.summarizer", "agno.models.base", "agno.models.message", "agno.run.base", "agno.run.response", "agno.run.team", "agno.utils.log", "agno.utils.prompts", "agno.utils.string"], "external_methods": ["json.loads", "json.dumps", "set_log_level_to_debug", "set_log_level_to_info", "log_debug", "log_warning", "logger", "MemoryManager", "SessionSummarizer", "MemoryDb", "MemoryRow", "UserMemory", "SessionSummary", "Model", "Message", "RunResponse", "TeamRunResponse", "parse_response_model_str", "get_json_output_prompt"], "published": ["MemorySearchResponse", "TeamMemberInteraction", "TeamContext", "Memory"], "classes": [{"name": "MemorySearchResponse", "description": "Model for Memory Search Response, containing a list of memory IDs most similar to a query."}, {"name": "TeamMemberInteraction", "description": "Data class representing an interaction of a team member, including their name, task, and response."}, {"name": "TeamContext", "description": "Data class encapsulating team member interactions and optional context text for a session."}, {"name": "Memory", "description": "Core class managing user memories, session summaries, team interactions, and related utilities within the system."}], "methods": [{"name": "__init__", "description": "Constructor initializing the Memory object with optional models, managers, summaries, and database connections."}, {"name": "set_model", "description": "Sets or updates the model used for memories and summaries."}, {"name": "get_model", "description": "Retrieves the current model, initializing a default if none is set."}, {"name": "refresh_from_db", "description": "Refreshes in-memory data from the database for a specific user."}, {"name": "set_log_level", "description": "Configures logging level based on debug mode or environment variable."}, {"name": "initialize", "description": "Initializes the memory system, setting log levels and refreshing data from the database."}, {"name": "to_dict", "description": "Serializes the Memory object into a dictionary representation."}, {"name": "get_user_memories", "description": "Retrieves all memories associated with a specific user."}, {"name": "get_session_summaries", "description": "Retrieves all session summaries for a user."}, {"name": "get_user_memory", "description": "Fetches a specific user memory by ID."}, {"name": "get_session_summary", "description": "Fetches a specific session summary by session ID."}, {"name": "add_user_memory", "description": "Adds a new user memory, optionally refreshing from the database."}, {"name": "replace_user_memory", "description": "Replaces an existing user memory with a new one."}, {"name": "delete_user_memory", "description": "Deletes a user memory by ID."}, {"name": "delete_session_summary", "description": "Deletes a session summary."}, {"name": "get_runs", "description": "Retrieves all runs associated with a session."}, {"name": "create_session_summary", "description": "Creates a session summary based on session messages."}, {"name": "acreate_session_summary", "description": "Asynchronous version of create_session_summary."}, {"name": "create_user_memories", "description": "Creates memories from messages and stores them in the database."}, {"name": "acreate_user_memories", "description": "Asynchronous version of create_user_memories."}, {"name": "update_memory_task", "description": "Updates memories based on a specified task."}, {"name": "aupdate_memory_task", "description": "Asynchronous version of update_memory_task."}, {"name": "_upsert_db_memory", "description": "Inserts or updates a memory record in the database."}, {"name": "_delete_db_memory", "description": "Deletes a memory record from the database."}, {"name": "get_messages_for_session", "description": "Retrieves messages for a session, filtering by roles and history."}, {"name": "add_run", "description": "Adds a run response to the session's run list."}, {"name": "get_messages_from_last_n_runs", "description": "Retrieves messages from the last N runs, excluding history."}, {"name": "get_tool_calls", "description": "Extracts tool call data from session runs."}, {"name": "search_user_memories", "description": "Searches user memories using different retrieval methods, including agentic search."}, {"name": "get_response_format", "description": "Determines the response format based on the model's capabilities."}, {"name": "_search_user_memories_agentic", "description": "Performs an agentic search through user memories based on a query."}, {"name": "_get_last_n_memories", "description": "Retrieves the most recent memories up to a limit."}, {"name": "_get_first_n_memories", "description": "Retrieves the oldest memories up to a limit."}, {"name": "clear", "description": "Clears all in-memory data and database records."}, {"name": "deep_copy", "description": "Creates a deep copy of the Memory object."}, {"name": "add_interaction_to_team_context", "description": "Adds a team member interaction to the session's team context."}, {"name": "set_team_context_text", "description": "Sets or updates the team context text for a session."}, {"name": "get_team_context_str", "description": "Returns the team context as a formatted string."}, {"name": "get_team_member_interactions_str", "description": "Returns a string representation of team member interactions."}, {"name": "get_team_context_images", "description": "Retrieves images associated with team interactions."}, {"name": "get_team_context_videos", "description": "Retrieves videos associated with team interactions."}, {"name": "get_team_context_audio", "description": "Retrieves audio artifacts associated with team interactions."}, {"name": "__deepcopy__", "description": "Custom deep copy implementation for the Memory class."}], "calls": ["json.loads", "json.dumps", "set_log_level_to_debug", "set_log_level_to_info", "logger.exception", "logger.error", "MemoryManager", "SessionSummarizer", "MemoryDb.read_memories", "MemoryDb.upsert_memory", "MemoryDb.delete_memory", "UserMemory.from_dict", "SessionSummary", "Model", "Message", "RunResponse", "TeamRunResponse", "parse_response_model_str", "get_json_output_prompt", "deepcopy"], "search-terms": ["Memory", "session summaries", "team context", "user memories", "agentic search", "memory management", "session message retrieval", "team member interactions", "memory deep copy", "memory database"], "state": 2, "file_id": 102, "knowledge_revision": 2433, "git_revision": "393a0c5b380482e7217ecf7280970e6add67291f", "ctags": [], "filename": "libs/agno/agno/memory/v2/memory.py", "hash": "9ce7dd224d07e9c70683b0e9f25f9214", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2433": "393a0c5b380482e7217ecf7280970e6add67291f"}]}