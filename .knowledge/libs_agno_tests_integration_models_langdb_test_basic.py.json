{"is_source_file": true, "format": "Python", "description": "This file contains test cases for the 'Agent' class and related components in the 'langdb' module, focusing on integration testing of language model interactions, including streaming, asynchronous calls, memory, structured output, JSON mode, and history management.", "external_files": ["pytest", "pydantic", "agno.agent", "agno.models.langdb", "agno.storage.sqlite"], "external_methods": ["pytest.mark.asyncio", "agent.run", "agent.arun", "agent.get_messages_for_session", "response.metrics.get", "assert", "hasattr", "list", "async for"], "published": [], "classes": [{"name": "MovieScript", "description": "A Pydantic model used for structured movie script data with fields for title, genre, and plot."}], "methods": [{"name": "_assert_metrics", "description": "A helper function to verify that the metrics in the response contain positive token counts and that total tokens equal the sum of input and output tokens."}, {"name": "test_basic", "description": "Tests a basic synchronous interaction with the Agent, verifying response content, message roles, and metrics."}, {"name": "test_basic_stream", "description": "Tests streaming responses from the Agent, ensuring the response stream is iterable and responses contain content."}, {"name": "test_async_basic", "description": "Asynchronous test for a basic interaction, verifying response content, message roles, and metrics."}, {"name": "test_async_basic_stream", "description": "Asynchronous test for streaming responses, verifying content is received for each streamed response."}, {"name": "test_with_memory", "description": "Tests the Agent's memory feature, ensuring it retains conversation history and that the history is reflected in messages."}, {"name": "test_structured_output", "description": "Tests the Agent's ability to produce structured output conforming to the MovieScript model."}, {"name": "test_json_response_mode", "description": "Tests the Agent's JSON response mode, ensuring structured output is correctly parsed."}, {"name": "test_history", "description": "Verifies the history management feature of the Agent, checking message count consistency after multiple interactions."}], "calls": ["agno.agent.Agent.run", "agno.agent.Agent.arun", "agno.agent.Agent.get_messages_for_session", "response.metrics.get", "assert", "hasattr", "list", "async for response in response_stream"], "search-terms": ["integration tests", "langdb", "Agent", "structured output", "streaming", "asyncio", "memory", "history", "MovieScript", "test_basic"], "state": 2, "file_id": 779, "knowledge_revision": 3020, "git_revision": "777260577abc1ec1fbdfa141f65351510b5775ee", "ctags": [], "filename": "libs/agno/tests/integration/models/langdb/test_basic.py", "hash": "517650ea774093c7ee44ca54fa2801cd", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3020": "777260577abc1ec1fbdfa141f65351510b5775ee"}]}