{"is_source_file": true, "format": "Python", "description": "Unit tests for the Cartesia tools module, testing various functionalities including voice listing, text-to-speech conversion, and voice localization, with extensive mocking of external dependencies.", "external_files": ["json", "base64", "unittest.mock", "pytest", "agno.agent", "agno.media", "agno.tools.cartesia"], "external_methods": ["json.loads", "b64encode", "MagicMock", "patch", "pytest.raises"], "published": ["mock_cartesia_client", "cartesia_tools", "mock_agent", "test_init_with_api_key", "test_init_with_env_var", "test_init_override_defaults", "test_init_missing_api_key", "test_feature_registration", "test_list_voices", "test_list_voices_error", "test_text_to_speech", "test_text_to_speech_error", "test_localize_voice"], "classes": [], "methods": [{"name": "mock_cartesia_client", "description": "Fixture that creates a mock Cartesia client with mocked methods and attributes for testing."}, {"name": "cartesia_tools", "description": "Fixture that creates an instance of CartesiaTools with a mocked API client."}, {"name": "mock_agent", "description": "Fixture that creates a mock Agent object with an add_audio method."}, {"name": "test_init_with_api_key", "description": "Tests initialization of CartesiaTools with an explicit API key."}, {"name": "test_init_with_env_var", "description": "Tests initialization of CartesiaTools using environment variable for API key."}, {"name": "test_init_override_defaults", "description": "Tests overriding default model and voice IDs during initialization."}, {"name": "test_init_missing_api_key", "description": "Tests behavior when API key is missing during initialization."}, {"name": "test_feature_registration", "description": "Verifies that features are registered based on configuration flags."}, {"name": "test_list_voices", "description": "Tests the list_voices method for correct data extraction and formatting."}, {"name": "test_list_voices_error", "description": "Tests error handling in list_voices when API raises an exception."}, {"name": "test_text_to_speech", "description": "Tests the text_to_speech method for correct artifact creation and agent interaction."}, {"name": "test_text_to_speech_error", "description": "Tests error handling in text_to_speech when TTS API raises an exception."}, {"name": "test_localize_voice", "description": "Tests the localize_voice method for correct API call and response parsing."}], "calls": ["json.loads", "b64encode", "MagicMock", "patch", "pytest.raises", "mock_cartesia_client.voices.list", "mock_cartesia_client.tts.bytes", "mock_cartesia_client.voices.localize", "mock_agent.add_audio"], "search-terms": ["unit tests", "CartesiaTools", "voice list", "text to speech", "localize voice", "mock cartesia client", "pytest", "audio artifact", "API key", "voice localization"], "state": 2, "file_id": 656, "knowledge_revision": 2933, "git_revision": "de4f484df0a97ba767f52dcde416048a0cdfa54e", "ctags": [], "filename": "libs/agno/tests/unit/tools/test_cartesia.py", "hash": "00084a7ac69bd31b4ce9b852533a21e4", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2933": "de4f484df0a97ba767f52dcde416048a0cdfa54e"}]}