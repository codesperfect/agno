{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for the 'Memory' module in the 'agno' project, specifically testing database persistence, memory creation, retrieval, updating, deletion, and session summaries within the 'memory' submodule. It uses pytest fixtures and asynchronous test functions to verify functionality of the memory management system.", "external_files": ["agno.memory.v2.db.sqlite", "agno.memory.v2.memory", "agno.models.message", "agno.models.openai", "agno.run.response"], "external_methods": ["pytest.fixture", "pytest.mark.asyncio", "tempfile.NamedTemporaryFile", "os.path.exists", "os.unlink", "Memory.add_user_memory", "Memory.get_user_memory", "Memory.create_user_memories", "Memory.acreate_user_memories", "Memory.search_user_memories", "Memory.create_session_summary", "Memory.acreate_session_summary", "Memory.delete_session_summary", "Memory.clear", "Memory.add_run", "Memory.update_memory_task", "Memory.aupdate_memory_task"], "published": [], "classes": [{"name": "Message", "description": "Represents a message in a conversation, with role and content."}, {"name": "OpenAIChat", "description": "Model class for OpenAI chat models, used for creating and managing chat-based AI models."}, {"name": "RunResponse", "description": "Encapsulates a response from a run, including content and associated messages."}, {"name": "SqliteMemoryDb", "description": "Database handler for SQLite-based memory storage."}, {"name": "Memory", "description": "Main class managing user memories, session summaries, and interactions with the database."}, {"name": "UserMemory", "description": "Represents a user's memory with associated topics and timestamp."}], "methods": [{"name": "temp_db_file", "description": "Fixture that creates a temporary SQLite database file for testing."}, {"name": "memory_db", "description": "Fixture that initializes a SQLite memory database for testing."}, {"name": "model", "description": "Fixture that creates a mock OpenAIChat model for testing."}, {"name": "memory_with_db", "description": "Fixture that creates a Memory instance with a database connection."}, {"name": "test_add_user_memory_with_db", "description": "Tests adding a user memory and verifying persistence across instances."}, {"name": "test_create_user_memory_with_db", "description": "Tests creating user memories from a message string."}, {"name": "test_create_user_memories_with_db", "description": "Tests creating multiple user memories from a list of Message objects."}, {"name": "test_acreate_user_memory_with_db", "description": "Asynchronous test for creating a user memory."}, {"name": "test_acreate_user_memories_with_db", "description": "Asynchronous test for creating multiple user memories."}, {"name": "test_search_user_memories_semantic", "description": "Tests semantic search functionality within user memories."}, {"name": "test_create_session_summary_with_db", "description": "Tests creating a session summary and verifying persistence."}, {"name": "test_acreate_session_summary_with_db", "description": "Asynchronous test for creating a session summary."}, {"name": "test_memory_persistence_across_instances", "description": "Verifies that memories persist across multiple Memory instances sharing the same database."}, {"name": "test_memory_operations_with_db", "description": "Tests CRUD operations on user memories with database persistence."}, {"name": "test_summary_operations_with_db", "description": "Tests creating, deleting, and verifying session summaries."}, {"name": "test_clear_memory_with_db", "description": "Tests clearing all memories and summaries, ensuring persistence in new instances."}, {"name": "test_search_user_memories_last_n", "description": "Tests retrieval of the most recent memories."}, {"name": "test_search_user_memories_first_n", "description": "Tests retrieval of the oldest memories."}, {"name": "test_update_memory_task_with_db", "description": "Tests updating memories based on a task string."}, {"name": "test_aupdate_memory_task_with_db", "description": "Asynchronous test for updating memories based on a task string."}], "calls": ["os.unlink", "os.path.exists", "tempfile.NamedTemporaryFile", "Memory.add_user_memory", "Memory.get_user_memory", "Memory.create_user_memories", "Memory.acreate_user_memories", "Memory.search_user_memories", "Memory.create_session_summary", "Memory.acreate_session_summary", "Memory.delete_session_summary", "Memory.clear", "Memory.add_run", "Memory.update_memory_task", "Memory.aupdate_memory_task"], "search-terms": ["unit tests", "memory persistence", "session summaries", "user memories", "async memory operations", "memory CRUD", "test fixtures", "memory search", "memory update", "memory delete", "session management", "memory system"], "state": 2, "file_id": 688, "knowledge_revision": 2965, "git_revision": "8ef1e282a4f713fbb26523ed89650048b97249a7", "ctags": [], "filename": "libs/agno/tests/integration/memory/test_memory.py", "hash": "d5234116b56c4836b5e994817869ec9e", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2965": "8ef1e282a4f713fbb26523ed89650048b97249a7"}]}