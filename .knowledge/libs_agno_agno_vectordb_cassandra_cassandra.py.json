{"is_source_file": true, "format": "Python", "description": "This file defines a Cassandra-based vector database class for storing and retrieving documents with vector similarity search capabilities, including methods for creating, inserting, searching, and managing the database table.", "external_files": ["agno.document", "agno.embedder", "agno.utils.log", "agno.vectordb.base", "agno.vectordb.cassandra.index", "agno.embedder.openai"], "external_methods": ["asyncio.to_thread", "log_debug", "log_info"], "published": ["Cassandra"], "classes": [{"name": "Cassandra", "description": "A class implementing a vector database interface using Cassandra, supporting document storage, vector search, and database management operations."}], "methods": [{"name": "__init__", "description": "Initializes the Cassandra vector database with table name, keyspace, embedder, and session, and sets up the table."}, {"name": "initialize_table", "description": "Creates an instance of the Cassandra table wrapper for vector storage."}, {"name": "create", "description": "Creates the Cassandra table if it does not already exist."}, {"name": "async_create", "description": "Asynchronously creates the table in a separate thread."}, {"name": "_row_to_document", "description": "Converts a database row into a Document object."}, {"name": "doc_exists", "description": "Checks if a document exists in the database by ID."}, {"name": "async_doc_exists", "description": "Asynchronously checks if a document exists by ID."}, {"name": "name_exists", "description": "Checks if a document with a given name exists."}, {"name": "async_name_exists", "description": "Asynchronously checks if a document with a given name exists."}, {"name": "id_exists", "description": "Checks if a document with a specific ID exists."}, {"name": "insert", "description": "Inserts a list of documents into the database, embedding them and storing their metadata."}, {"name": "async_insert", "description": "Asynchronously inserts documents in a separate thread."}, {"name": "upsert", "description": "Inserts or updates documents based on primary key."}, {"name": "async_upsert", "description": "Asynchronously upserts documents."}, {"name": "search", "description": "Performs a keyword-based search on document metadata, returning matching documents."}, {"name": "async_search", "description": "Performs an asynchronous search."}, {"name": "_search_to_documents", "description": "Converts search hits into Document objects."}, {"name": "vector_search", "description": "Performs a vector similarity search using embeddings."}, {"name": "drop", "description": "Drops the Cassandra table."}, {"name": "async_drop", "description": "Asynchronously drops the table."}, {"name": "exists", "description": "Checks if the table exists in Cassandra."}, {"name": "async_exists", "description": "Asynchronously checks if the table exists."}, {"name": "delete", "description": "Deletes all documents in the table."}], "calls": ["asyncio.to_thread", "log_debug", "log_info", "self.table.put_async", "self.table.metric_ann_search", "self.session.execute", "self.table.clear"], "search-terms": ["Cassandra vector database", "vector similarity search", "document storage Cassandra", "async create table", "vector search implementation", "Cassandra table management"], "state": 2, "file_id": 570, "knowledge_revision": 2828, "git_revision": "e9c9b56a228d15ffc1c62509160880b68b96239f", "ctags": [], "filename": "libs/agno/agno/vectordb/cassandra/cassandra.py", "hash": "2f590d35c233d66747a056e795e1953d", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2828": "e9c9b56a228d15ffc1c62509160880b68b96239f"}]}