{"is_source_file": true, "format": "Python", "description": "This Python script demonstrates how to run an Agent with MCP integration in the Agno Playground, including setup instructions, environment configuration, and server initialization.", "external_files": ["agno.agent", "agno.models.openai", "agno.playground", "agno.storage.agent.sqlite", "agno.tools.mcp", "mcp"], "external_methods": ["nest_asyncio.apply", "getenv", "dedent", "asyncio.run"], "published": ["run_server"], "classes": [{"name": "Agent", "description": "Represents an AI agent configured with tools, instructions, and storage."}, {"name": "OpenAIChat", "description": "Model class for OpenAI chat-based models."}, {"name": "Playground", "description": "Provides a web interface for interacting with agents."}, {"name": "SqliteAgentStorage", "description": "Handles storage of agent data in a SQLite database."}, {"name": "MCPTools", "description": "Tools for interacting with MCP server."}, {"name": "StdioServerParameters", "description": "Configuration parameters for the MCP server."}], "methods": [{"name": "run_server", "description": "Asynchronous function that initializes and runs the MCP-enabled agent server."}], "calls": ["nest_asyncio.apply", "getenv", "dedent", "asyncio.run", "StdioServerParameters", "MCPTools", "Agent", "OpenAIChat", "SqliteAgentStorage", "Playground", "playground.get_app", "playground.serve"], "search-terms": ["MCP integration", "Agno Playground", "GitHub agent", "asyncio server", "agent setup", "Python MCP server"], "state": 2, "file_id": 2069, "knowledge_revision": 4310, "git_revision": "69f7778ad09d38baa96c5643135b147161523fab", "ctags": [], "filename": "cookbook/apps/playground/mcp_demo.py", "hash": "c36f36509bd6fb8a69cc09276a60e78e", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"4310": "69f7778ad09d38baa96c5643135b147161523fab"}]}