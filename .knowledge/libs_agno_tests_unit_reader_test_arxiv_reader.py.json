{"is_source_file": true, "format": "Python", "description": "Unit test file for the ArxivReader class, testing its reading and asynchronous reading functionalities with mocked arxiv search results.", "external_files": ["arxiv", "pytest", "agno.document.reader.arxiv_reader"], "external_methods": ["arxiv.Search", "arxiv.SortCriterion", "pytest.fixture", "pytest.mark.asyncio", "unittest.mock.Mock", "unittest.mock.patch"], "published": [], "classes": [], "methods": [{"name": "mock_arxiv_result", "description": "Fixture that creates a mock arxiv result with predefined attributes."}, {"name": "mock_search_results", "description": "Fixture that returns a list of mock arxiv results."}, {"name": "test_read_basic_query", "description": "Tests the read method of ArxivReader with a basic query, verifying correct document extraction."}, {"name": "test_read_empty_results", "description": "Tests the read method when no search results are returned."}, {"name": "test_read_max_results", "description": "Tests the read method with a maximum results limit."}, {"name": "test_read_sort_criterion", "description": "Verifies that the search is called with the correct sort criterion."}, {"name": "test_read_with_special_characters", "description": "Tests the read method with a query containing special characters."}, {"name": "test_read_different_sort_criterions", "description": "Tests the read method with different sort options."}, {"name": "test_async_read_basic_query", "description": "Tests the async_read method with a basic query."}, {"name": "test_async_read_empty_results", "description": "Tests the async_read method when no results are returned."}, {"name": "test_async_read_max_results", "description": "Tests the async_read method with a max results limit."}, {"name": "test_async_read_sort_criterion", "description": "Verifies the async_read method calls with the correct sort criterion."}, {"name": "test_async_read_with_special_characters", "description": "Tests the async_read method with special characters in the query."}], "calls": ["arxiv.Search", "arxiv.SortCriterion", "Mock", "patch"], "search-terms": ["ArxivReader", "unit tests", "mocked arxiv search", "async read", "sort criterion", "special characters in query"], "state": 2, "file_id": 612, "knowledge_revision": 2876, "git_revision": "74ef01c9eef4c02c89c793d47be6e93ab5747b0f", "ctags": [], "filename": "libs/agno/tests/unit/reader/test_arxiv_reader.py", "hash": "9486465468509854d3392ade4db820d7", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2876": "74ef01c9eef4c02c89c793d47be6e93ab5747b0f"}]}