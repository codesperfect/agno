{"is_source_file": true, "format": "Python", "description": "This file defines a Python class 'SingleStore' that implements a vector database interface using SQLAlchemy for interaction with a SingleStore database. It includes methods for creating, checking existence, inserting, upserting, searching, and deleting data, as well as handling embeddings and document metadata.", "external_files": ["sqlalchemy.dialects.mysql", "sqlalchemy.engine", "sqlalchemy.inspection", "sqlalchemy.orm", "sqlalchemy.schema", "sqlalchemy.sql.expression", "sqlalchemy.types", "agno.document", "agno.embedder", "agno.reranker.base", "agno.utils.log", "agno.vectordb.base", "agno.vectordb.distance"], "external_methods": ["create_engine", "inspect", "sessionmaker", "log_debug", "log_info", "logger.error", "Distance.cosine", "Distance.l2", "Distance.max_inner_product", "json.dumps", "json.loads", "md5", "select", "func.dot_product", "text", "MetaData", "Table", "Column", "delete"], "published": ["SingleStore"], "classes": [{"name": "SingleStore", "description": "A class implementing a vector database interface for SingleStore, supporting creation, insertion, search, and management of vector data with metadata."}], "methods": [{"name": "get_table", "description": "Defines the SQLAlchemy table structure for storing documents and embeddings."}, {"name": "create", "description": "Creates the database table if it does not exist."}, {"name": "table_exists", "description": "Checks if the table exists in the database."}, {"name": "doc_exists", "description": "Checks if a specific document exists based on its content hash."}, {"name": "name_exists", "description": "Checks if a document with a given name exists."}, {"name": "id_exists", "description": "Checks if a document with a given ID exists."}, {"name": "insert", "description": "Inserts a list of documents into the database."}, {"name": "upsert_available", "description": "Indicates that upsert functionality is supported."}, {"name": "upsert", "description": "Performs an upsert (insert or update) of documents."}, {"name": "search", "description": "Searches for documents similar to a query."}, {"name": "drop", "description": "Deletes the database table."}, {"name": "exists", "description": "Checks if the table exists."}, {"name": "get_count", "description": "Returns the number of documents in the table."}, {"name": "optimize", "description": "Placeholder for optimization routines (no implementation)."}, {"name": "delete", "description": "Clears all data from the table."}, {"name": "async_create", "description": "Async version not supported."}, {"name": "async_doc_exists", "description": "Async version not supported."}, {"name": "async_insert", "description": "Async version not supported."}, {"name": "async_upsert", "description": "Async version not supported."}, {"name": "async_search", "description": "Async version not supported."}, {"name": "async_drop", "description": "Async version not supported."}, {"name": "async_exists", "description": "Async version not supported."}, {"name": "async_name_exists", "description": "Async version not supported."}], "calls": ["create_engine", "inspect", "sessionmaker", "log_info", "log_debug", "logger.error", "select", "func.dot_product", "text", "MetaData", "Table", "Column", "delete"], "search-terms": ["SingleStore", "vector database", "SQLAlchemy", "embedding", "content hash", "upsert", "search", "vector column", "metadata", "create table"], "state": 2, "file_id": 557, "knowledge_revision": 2824, "git_revision": "65b51199867b9c95a09bfe7c4c91e56b8126e675", "ctags": [], "filename": "libs/agno/agno/vectordb/singlestore/singlestore.py", "hash": "8066807fbccbbc48ad62211bdc08a995", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2824": "65b51199867b9c95a09bfe7c4c91e56b8126e675"}]}