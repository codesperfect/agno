{"is_source_file": true, "format": "Python", "description": "This file contains multiple test functions for verifying the parsing and invocation of functions within a Gemini-based agent, including handling of various parameter types, nested models, and multiple functions.", "external_files": ["agno.models.google.gemini", "agno.models.message", "agno.tools.function"], "external_methods": ["Function.from_callable", "Gemini.invoke", "Message(role, content)"], "published": [], "classes": [{"name": "City", "description": "Pydantic model representing a city with optional population"}, {"name": "TravelPlan", "description": "Pydantic model representing a travel plan with location, duration, travelers, preferences, and optional budget"}, {"name": "Location", "description": "Pydantic model representing a location with city and country"}], "methods": [{"name": "test_no_parameters_tool_parsing", "description": "Tests function invocation with no parameters"}, {"name": "test_basic_parameters_tool_parsing", "description": "Tests function invocation with basic parameters"}, {"name": "test_optional_parameters_tool_parsing", "description": "Tests function invocation with optional parameters"}, {"name": "test_union_type_parameters_tool_parsing", "description": "Tests function invocation with union type parameters"}, {"name": "test_python312_union_syntax_tool_parsing", "description": "Tests function invocation with Python 3.10+ union syntax"}, {"name": "test_pydantic_model_parameters_tool_parsing", "description": "Tests function invocation with a Pydantic model parameter"}, {"name": "test_complex_nested_parameters_tool_parsing", "description": "Tests function invocation with complex nested parameters"}, {"name": "test_multiple_functions_tool_parsing", "description": "Tests invocation with multiple functions"}, {"name": "test_list_with_generics_tool_parsing", "description": "Tests function invocation with list parameters"}, {"name": "test_tuple_with_fixed_types_tool_parsing", "description": "Tests function invocation with tuple parameters"}, {"name": "test_sequence_with_optional_values_tool_parsing", "description": "Tests function invocation with sequence and optional parameters"}, {"name": "test_optional_sequence_tool_parsing", "description": "Tests function invocation with optional list parameters"}, {"name": "test_mixed_sequence_types_tool_parsing", "description": "Tests invocation with mixed sequence types"}, {"name": "test_nested_pydantic_model_with_dict_tool_parsing", "description": "Tests invocation with nested Pydantic models containing dicts"}], "calls": ["Function.from_callable", "Gemini.invoke", "Message(role, content)"], "search-terms": ["function invocation tests", "pydantic models", "complex parameter handling", "multiple functions", "nested models", "type unions", "sequence parameters", "tuple parameters", "optional parameters"], "state": 2, "file_id": 819, "knowledge_revision": 3063, "git_revision": "95bad1a4af2dab958e8edc19df36108b27f5a77b", "ctags": [], "filename": "libs/agno/tests/integration/models/google/test_tool_parsing.py", "hash": "9afb811ef3574cfedbd8193f6f768900", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3063": "95bad1a4af2dab958e8edc19df36108b27f5a77b"}]}