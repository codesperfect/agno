{"is_source_file": true, "format": "Python", "description": "This file defines the OpenAIChat class, a Python source code module implementing a model interface for interacting with OpenAI's chat completion API, including methods for synchronous and asynchronous invocation, streaming, response parsing, and configuration management.", "external_files": ["agno.exceptions", "agno.media", "agno.models.base", "agno.models.message", "agno.models.response", "agno.utils.log", "agno.utils.openai", "openai"], "external_methods": ["get_response_schema_for_provider", "log_debug", "log_error", "log_warning", "_format_file_for_message", "audio_to_message", "images_to_message"], "published": ["OpenAIChat"], "classes": [{"name": "OpenAIChat", "description": "A class for interacting with OpenAI models using the Chat completions API, supporting synchronous, asynchronous, and streaming methods, along with response parsing and configuration utilities."}], "methods": [{"name": "_get_client_params", "description": "Constructs and returns the parameters for creating an OpenAI client, fetching API key from environment if not set."}, {"name": "get_client", "description": "Returns an instance of the OpenAI synchronous client configured with current parameters."}, {"name": "get_async_client", "description": "Returns an instance of the OpenAI asynchronous client configured with current parameters."}, {"name": "get_request_params", "description": "Generates request parameters for API calls, including response format, tools, and other options."}, {"name": "to_dict", "description": "Serializes the model's configuration into a dictionary."}, {"name": "_format_message", "description": "Formats a Message object into the dictionary structure expected by OpenAI API."}, {"name": "invoke", "description": "Sends a chat completion request synchronously to OpenAI API with formatted messages and parameters."}, {"name": "ainvoke", "description": "Sends an asynchronous chat completion request to OpenAI API."}, {"name": "invoke_stream", "description": "Streams a chat completion from OpenAI API synchronously, yielding chunks."}, {"name": "ainvoke_stream", "description": "Streams a chat completion from OpenAI API asynchronously, yielding chunks."}, {"name": "parse_tool_calls", "description": "Builds tool call data structures from streamed tool call chunks."}, {"name": "parse_provider_response", "description": "Parses a ChatCompletion response object into a ModelResponse."}, {"name": "parse_provider_response_delta", "description": "Parses a streamed ChatCompletionChunk into a ModelResponse."}], "calls": ["get_response_schema_for_provider", "log_debug", "log_error", "log_warning", "_format_file_for_message", "audio_to_message", "images_to_message"], "search-terms": ["OpenAIChat", "chat completion", "async invoke", "streaming", "model configuration", "response parsing", "openai API"], "state": 2, "file_id": 266, "knowledge_revision": 2546, "git_revision": "69e8f9dc474e69f2d3863442c4c1c6824ca37f08", "ctags": [], "filename": "libs/agno/agno/models/openai/chat.py", "hash": "01f255e44c783a1cfd5f5d76bfa63e82", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2546": "69e8f9dc474e69f2d3863442c4c1c6824ca37f08"}]}