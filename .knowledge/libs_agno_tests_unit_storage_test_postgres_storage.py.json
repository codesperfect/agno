{"is_source_file": true, "format": "Python", "description": "This is a test module for the PostgresStorage class, containing unit tests for its initialization, CRUD operations, session retrieval, table management, and mode switching, using pytest and unittest.mock for mocking dependencies.", "external_files": ["agno.storage.postgres", "agno.storage.session.agent", "agno.storage.session.workflow"], "external_methods": ["agno.storage.postgres.create_engine", "agno.storage.postgres.scoped_session", "agno.storage.postgres.inspect"], "published": [], "classes": [], "methods": [{"name": "mock_engine", "description": "Creates a mock SQLAlchemy engine for testing."}, {"name": "mock_session", "description": "Creates a mock SQLAlchemy session and session instance for testing."}, {"name": "agent_storage", "description": "Sets up a mocked PostgresStorage instance for agent mode with mocked components."}, {"name": "workflow_storage", "description": "Sets up a mocked PostgresStorage instance for workflow mode with mocked components."}, {"name": "test_agent_storage_initialization", "description": "Tests the initialization of PostgresStorage with a database URL and default parameters."}, {"name": "test_agent_storage_crud", "description": "Tests CRUD operations (upsert, read, delete) for agent storage sessions."}, {"name": "test_workflow_storage_crud", "description": "Tests CRUD operations (upsert, read, delete) for workflow storage sessions."}, {"name": "test_get_all_sessions", "description": "Tests retrieval of all sessions with optional filtering by user_id or entity_id."}, {"name": "test_get_all_session_ids", "description": "Tests retrieval of all session IDs."}, {"name": "test_table_exists", "description": "Tests the table_exists method for existing and non-existing tables."}, {"name": "test_create_table", "description": "Tests the creation of a new table."}, {"name": "test_drop_table", "description": "Tests dropping an existing table."}, {"name": "test_mode_switching", "description": "Tests switching between 'agent' and 'workflow' modes in storage."}], "calls": ["agno.storage.postgres.create_engine", "agno.storage.postgres.scoped_session", "agno.storage.postgres.inspect"], "search-terms": ["PostgresStorage", "unit tests", "pytest", "mocked database sessions", "session CRUD", "table management", "mode switching", "agent sessions", "workflow sessions"], "state": 2, "file_id": 670, "knowledge_revision": 2909, "git_revision": "b282281e6026e1dab22d0e759cb9fdd41a777d61", "ctags": [], "filename": "libs/agno/tests/unit/storage/test_postgres_storage.py", "hash": "40bc831b4f1943e19c46415da74eedb1", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2909": "b282281e6026e1dab22d0e759cb9fdd41a777d61"}]}