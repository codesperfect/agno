{"is_source_file": true, "format": "Python", "description": "This file defines classes and functions for managing AWS EC2 security groups, including inbound and outbound rules, creation, reading, updating, and deletion of security groups, with detailed handling of security group rules and AWS API interactions.", "external_files": ["agno.aws.api_client", "agno.aws.resource.base", "agno.aws.resource.ec2.subnet", "agno.aws.resource.reference", "agno.cli.console", "agno.utils.log"], "external_methods": ["httpx.get", "print_info", "logger.debug", "logger.error", "logger.warning", "AwsApiClient.get_service_client", "AwsResource.get_resource_type", "AwsResource.get_resource_name", "AwsResource.get_service_client", "AwsResource.read", "AwsResource.active_resource", "AwsResource.get_waiter", "get_vpc_id_from_subnet_ids", "AwsReference.get_reference"], "published": ["get_my_ip", "InboundRule", "OutboundRule", "SecurityGroup"], "classes": [{"name": "InboundRule", "description": "Represents an inbound security group rule with properties for CIDR ranges, security group references, ports, and protocols."}, {"name": "OutboundRule", "description": "Represents an outbound security group rule with properties for CIDR ranges, security group references, ports, and protocols."}, {"name": "SecurityGroup", "description": "Represents an AWS EC2 Security Group with methods for creation, reading, updating, deletion, and managing inbound and outbound rules."}], "methods": [{"name": "get_my_ip", "description": "Fetches the external IP address of the current machine and returns it with a /32 suffix."}, {"name": "_create", "description": "Creates the security group in AWS using provided parameters."}, {"name": "post_create", "description": "Waits for the security group to be created and adds inbound and outbound rules."}, {"name": "_read", "description": "Reads the current state of the security group from AWS."}, {"name": "_delete", "description": "Deletes the security group from AWS."}, {"name": "_update", "description": "Updates the security group rules in AWS."}, {"name": "get_security_group_id", "description": "Returns the security group ID, fetching it if necessary."}, {"name": "add_inbound_rules", "description": "Adds inbound rules to the security group in AWS."}, {"name": "add_outbound_rules", "description": "Adds outbound rules to the security group in AWS."}], "calls": ["httpx.get", "print_info", "logger.debug", "logger.error", "logger.warning", "AwsApiClient.get_service_client", "AwsResource.get_resource_type", "AwsResource.get_resource_name", "AwsResource.read", "AwsResource.get_waiter", "get_vpc_id_from_subnet_ids", "AwsReference.get_reference", "service_client.create_security_group", "service_client.describe_security_groups", "service_client.delete_security_group", "service_client.authorize_security_group_ingress", "service_client.authorize_security_group_egress", "self.get_service_client", "self.get_resource_type", "self.get_resource_name", "self.read", "self.get_security_group_id", "self.add_inbound_rules", "self.add_outbound_rules", "waiter.wait"], "search-terms": ["SecurityGroup", "InboundRule", "OutboundRule", "ec2 security group", "AWS security group management", "security group rules", "create_security_group", "authorize_security_group_ingress", "authorize_security_group_egress"], "state": 2, "file_id": 65, "knowledge_revision": 2342, "git_revision": "e67ee577664da81d64486d0682baa2083ae8659b", "ctags": [], "filename": "libs/infra/agno_aws/agno/aws/resource/ec2/security_group.py", "hash": "0e6f47b701ab8b74631ff57c01fc441c", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2342": "e67ee577664da81d64486d0682baa2083ae8659b"}]}