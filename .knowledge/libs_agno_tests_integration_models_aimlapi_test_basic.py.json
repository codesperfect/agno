{"is_source_file": true, "format": "Python", "description": "This is a test script for the 'Agent' class and related components in the 'agno' project, testing various functionalities such as basic responses, streaming, async operations, memory, structured output, and history management.", "external_files": ["pytest", "pydantic", "agno.agent", "agno.models.aimlapi", "agno.storage.sqlite"], "external_methods": ["pytest.mark.asyncio", "pytest", "BaseModel", "Field", "Agent", "RunResponse", "AIMLApi", "SqliteStorage"], "published": ["test_basic", "test_basic_stream", "test_async_basic", "test_async_basic_stream", "test_with_memory", "test_response_model", "test_json_response_mode", "test_structured_outputs_deprecated", "test_history"], "classes": [{"name": "MovieScript", "description": "A Pydantic model used for testing structured response outputs, with fields for title, genre, and plot."}], "methods": [{"name": "_assert_metrics", "description": "A helper function to verify that the response metrics contain positive token counts and that total tokens equal the sum of input and output tokens."}, {"name": "test_basic", "description": "Tests the basic functionality of the Agent with a simple prompt and verifies the response and metrics."}, {"name": "test_basic_stream", "description": "Tests the streaming response functionality of the Agent."}, {"name": "test_async_basic", "description": "Tests the asynchronous basic response of the Agent."}, {"name": "test_async_basic_stream", "description": "Tests the asynchronous streaming response of the Agent."}, {"name": "test_with_memory", "description": "Tests the Agent's ability to remember conversation history across multiple interactions."}, {"name": "test_response_model", "description": "Tests the Agent's ability to return structured responses conforming to a Pydantic model."}, {"name": "test_json_response_mode", "description": "Tests the Agent's response when configured to output JSON mode."}, {"name": "test_structured_outputs_deprecated", "description": "Tests the Agent's response with structured outputs when the deprecated option is used."}, {"name": "test_history", "description": "Tests the Agent's session history management with SQLite storage."}], "calls": ["Agent.run", "Agent.arun", "Agent.get_messages_for_session", "response.metrics.get", "sum", "hasattr", "list", "async for response in response_stream", "isinstance", "assert"], "search-terms": ["pytest", "pydantic", "Agent", "RunResponse", "AIMLApi", "SqliteStorage", "structured output", "asyncio", "memory", "history", "test cases", "integration testing"], "state": 2, "file_id": 773, "knowledge_revision": 3006, "git_revision": "777260577abc1ec1fbdfa141f65351510b5775ee", "ctags": [], "filename": "libs/agno/tests/integration/models/aimlapi/test_basic.py", "hash": "b16f8fd5a68cdadf55f88ec9765271ed", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3006": "777260577abc1ec1fbdfa141f65351510b5775ee"}]}