{"is_source_file": true, "format": "Python", "description": "This is a test script for the 'Team' class and related event handling in the agno project, specifically testing event streaming, intermediate steps, and interactions with tools and agents in various scenarios.", "external_files": ["pytest", "pydantic", "agno.agent", "agno.agent.agent", "agno.models.openai.chat", "agno.team", "agno.tools.calculator", "agno.tools.decorator", "agno.tools.duckduckgo", "agno.tools.reasoning", "agno.tools.yfinance"], "external_methods": ["pytest.mark.asyncio", "team.run", "team.arun", "team.continue_run", "team_storage.get_all_sessions"], "published": ["test_basic_events", "test_async_basic_events", "test_basic_intermediate_steps_events", "test_basic_intermediate_steps_events_persisted", "test_intermediate_steps_with_tools", "test_intermediate_steps_with_tools_events_persisted", "test_intermediate_steps_with_reasoning", "test_intermediate_steps_with_user_confirmation", "test_intermediate_steps_with_memory", "test_intermediate_steps_with_structured_output", "test_intermediate_steps_with_parser_model", "test_intermediate_steps_with_member_agents", "test_intermediate_steps_with_member_agents_complex", "test_intermediate_steps_with_member_agents_streaming_off"], "classes": [{"name": "Person", "description": "A Pydantic model used for structured output in some tests, representing a person with name, description, and age."}], "methods": [{"name": "test_basic_events", "description": "Tests basic event streaming for a team run with a simple message."}, {"name": "test_async_basic_events", "description": "Asynchronous test for event streaming with a team run."}, {"name": "test_basic_intermediate_steps_events", "description": "Tests event streaming with intermediate steps enabled, verifying event sequence and content."}, {"name": "test_basic_intermediate_steps_events_persisted", "description": "Verifies that events are persisted correctly in storage during a streamed run."}, {"name": "test_intermediate_steps_with_tools", "description": "Tests event streaming when tools are involved, specifically YFinanceTools."}, {"name": "test_intermediate_steps_with_tools_events_persisted", "description": "Checks persistence of events involving tools in storage."}, {"name": "test_intermediate_steps_with_reasoning", "description": "Tests event sequence when reasoning tools are used, including reasoning steps."}, {"name": "test_intermediate_steps_with_user_confirmation", "description": "Tests handling of user confirmation tools and pausing/resuming runs."}, {"name": "test_intermediate_steps_with_memory", "description": "Verifies event handling when memory is enabled during streaming."}, {"name": "test_intermediate_steps_with_structured_output", "description": "Tests structured output handling with a custom Pydantic model."}, {"name": "test_intermediate_steps_with_parser_model", "description": "Tests event streaming with a parser model involved, verifying parser-specific events."}, {"name": "test_intermediate_steps_with_member_agents", "description": "Tests nested agent interactions and event sequences with multiple agents."}, {"name": "test_intermediate_steps_with_member_agents_complex", "description": "Tests complex nested team and agent structures with event streaming."}, {"name": "test_intermediate_steps_with_member_agents_streaming_off", "description": "Verifies behavior when streaming is disabled for member agent events."}], "calls": ["Team.run", "Team.arun", "Team.continue_run", "team_storage.get_all_sessions"], "search-terms": ["test_event_streaming", "intermediate_steps", "agent interactions", "event sequence", "tool calls", "structured output", "parser model", "memory", "streaming off", "nested agents"], "state": 2, "file_id": 725, "knowledge_revision": 2976, "git_revision": "2487b106b6d09df4628ca8843d061a0c73d3412a", "ctags": [], "filename": "libs/agno/tests/integration/teams/test_event_streaming.py", "hash": "a530627d0295928b3d2e58943e57607c", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2976": "2487b106b6d09df4628ca8843d061a0c73d3412a"}]}