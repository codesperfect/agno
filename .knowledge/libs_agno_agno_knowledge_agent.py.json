{"is_source_file": true, "format": "Python", "description": "This file defines the AgentKnowledge class, which manages document reading, searching, loading, and filtering within a knowledge base, interfacing with a vector database and handling document processing asynchronously and synchronously.", "external_files": ["agno.document", "agno.document.chunking.fixed", "agno.document.chunking.strategy", "agno.document.reader.base", "agno.utils.log", "agno.vectordb"], "external_methods": ["logger.warning", "logger.error", "logger.info", "log_debug", "log_info"], "published": ["AgentKnowledge"], "classes": [{"name": "AgentKnowledge", "description": "A class that manages the knowledge base for an agent, including document loading, searching, and filtering, with support for asynchronous operations and integration with a vector database."}], "methods": [{"name": "update_reader", "description": "Validator that updates the reader's chunking strategy after initialization."}, {"name": "search", "description": "Performs a search query on the vector database to retrieve relevant documents."}, {"name": "async_search", "description": "Asynchronously performs a search query on the vector database to retrieve relevant documents."}, {"name": "load", "description": "Loads documents into the vector database, with options to recreate the collection, upsert, and skip existing documents."}, {"name": "aload", "description": "Asynchronously loads documents into the vector database with options similar to load."}, {"name": "load_documents", "description": "Loads a list of documents into the vector database, with options for upsert and skipping existing documents."}, {"name": "async_load_documents", "description": "Asynchronously loads a list of documents into the vector database."}, {"name": "add_document_to_knowledge_base", "description": "Adds a single document to the knowledge base."}, {"name": "async_load_document", "description": "Asynchronously adds a single document to the knowledge base."}, {"name": "load_dict", "description": "Loads a document from a dictionary representation."}, {"name": "load_json", "description": "Loads a document from a JSON string."}, {"name": "load_text", "description": "Loads a plain text string as a document."}, {"name": "exists", "description": "Checks if the knowledge base exists in the vector database."}, {"name": "delete", "description": "Deletes or clears the knowledge base."}, {"name": "filter_existing_documents", "description": "Filters out documents that already exist in the vector database to avoid duplicates."}, {"name": "_track_metadata_structure", "description": "Tracks metadata keys for filtering purposes."}, {"name": "validate_filters", "description": "Validates provided filters against tracked metadata keys."}, {"name": "initialize_valid_filters", "description": "Rebuilds the set of valid metadata filters from current documents."}, {"name": "prepare_load", "description": "Validates file path, tracks metadata, and prepares the vector database for loading data."}, {"name": "aprepare_load", "description": "Asynchronous version of prepare_load."}, {"name": "process_documents", "description": "Processes and loads documents, with options for upsert and skipping existing documents, supporting both sync and async."}, {"name": "aprocess_documents", "description": "Asynchronously processes and loads documents."}], "calls": ["logger.warning", "logger.error", "logger.info", "log_debug", "log_info", "self.vector_db.search", "self.vector_db.async_search", "self.vector_db.drop", "self.vector_db.create", "self.vector_db.exists", "self.vector_db.async_exists", "self.vector_db.async_drop", "self.vector_db.async_create", "self.vector_db.upsert_available", "self.vector_db.upsert", "self.vector_db.async_upsert", "self.vector_db.insert", "self.vector_db.async_insert", "self.vector_db.doc_exists", "self.vector_db.async_doc_exists", "self.vector_db.delete"], "search-terms": ["AgentKnowledge", "vector_db", "document loading", "async document processing", "metadata filtering", "knowledge base management", "document search", "async load", "filter existing documents"], "state": 2, "file_id": 140, "knowledge_revision": 2422, "git_revision": "0131d18a5815d80d1436254ea22ddd1aa88834ab", "ctags": [], "filename": "libs/agno/agno/knowledge/agent.py", "hash": "ee15080630af2725117a5ef467de7ac4", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2422": "0131d18a5815d80d1436254ea22ddd1aa88834ab"}]}