{"is_source_file": true, "format": "Python", "description": "This file defines the 'Playground' class which manages a FastAPI application for a playground environment, including setup, routing, server serving, and integration with external components like agents, teams, workflows, and platform registration.", "external_files": ["agno.agent.agent", "agno.api.playground", "agno.app.playground.async_router", "agno.app.playground.sync_router", "agno.app.utils", "agno.cli.console", "agno.cli.settings", "agno.playground.settings", "agno.team.team", "agno.utils.log", "agno.workflow.workflow", "agno.api.app"], "external_methods": ["get_sync_playground_router", "get_async_playground_router", "generate_id", "console.print", "log_debug", "create_app"], "published": ["Playground"], "classes": [{"name": "Playground", "description": "A class that encapsulates the setup, configuration, and serving of a FastAPI-based playground environment, managing agents, teams, workflows, and platform registration."}], "methods": [{"name": " __init__", "description": "Constructor initializing the Playground with optional agents, teams, workflows, settings, and configuration parameters."}, {"name": "set_app_id", "description": "Generates and sets a unique application ID if not already assigned."}, {"name": "_set_monitoring", "description": "Overrides monitoring settings based on environment variables."}, {"name": "get_router", "description": "Returns the synchronous API router configured with agents, workflows, and teams."}, {"name": "get_async_router", "description": "Returns the asynchronous API router configured with agents, workflows, and teams."}, {"name": "get_app", "description": "Creates and returns a FastAPI application instance with configured middleware, exception handlers, and routers."}, {"name": "serve", "description": "Starts the server using Uvicorn, sets up the playground URL panel, and registers agents, teams, and workflows."}, {"name": "register_app_on_platform", "description": "Registers the application with an external platform if monitoring is enabled."}, {"name": "to_dict", "description": "Serializes the Playground's configuration, including agents, teams, workflows, and endpoint data, into a dictionary."}], "calls": ["get_sync_playground_router", "get_async_playground_router", "generate_id", "console.print", "log_debug", "create_app", "uvicorn.run", "self.set_app_id", "self.register_app_on_platform", "agent.register_agent", "team.register_team", "workflow.register_workflow"], "search-terms": ["Playground class", "FastAPI playground setup", "agent registration", "team management", "workflow integration", "platform app registration", "serve method", "async router", "sync router"], "state": 2, "file_id": 328, "knowledge_revision": 2578, "git_revision": "de4f484df0a97ba767f52dcde416048a0cdfa54e", "ctags": [], "filename": "libs/agno/agno/app/playground/app.py", "hash": "330c33416e9670007ed91e6414a0063c", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2578": "de4f484df0a97ba767f52dcde416048a0cdfa54e"}]}