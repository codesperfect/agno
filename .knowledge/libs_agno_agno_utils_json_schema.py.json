{"is_source_file": true, "format": "Python", "description": "This file contains utility functions for generating and processing JSON schemas from Python types, including support for Pydantic models, dataclasses, and various type annotations. It also includes functions to inline schemas and determine JSON schema types for Python types.", "external_files": ["pydantic", "agno.utils.log"], "external_methods": ["pydantic.BaseModel.model_json_schema", "agno.utils.log.logger"], "published": [], "classes": [], "methods": [{"name": "is_origin_union_type", "description": "Checks if the given origin type is a Union or UnionType, considering Python version differences."}, {"name": "get_json_type_for_py_type", "description": "Maps Python type names to corresponding JSON schema types."}, {"name": "inline_pydantic_schema", "description": "Recursively inlines $ref schemas in a given JSON schema, resolving definitions."}, {"name": "get_json_schema_for_arg", "description": "Generates a JSON schema fragment for a given Python type hint, supporting enums, Pydantic models, dataclasses, and container types."}, {"name": "get_json_schema", "description": "Constructs a JSON schema for a dictionary of type hints, optionally including descriptions and strictness."}], "calls": ["sys.version_info.minor", "pydantic.BaseModel.model_json_schema", "logger.warning", "logger.error"], "search-terms": ["json schema generation", "pydantic model schema", "inline pydantic schemas", "type hint to JSON schema", "dataclass JSON schema", "schema resolution", "UnionType detection"], "state": 2, "file_id": 192, "knowledge_revision": 2448, "git_revision": "4c8c2dfc166831ef6b7244bab35a0f2e17b2d352", "ctags": [], "filename": "libs/agno/agno/utils/json_schema.py", "hash": "8d9d710e33b8f0c2fad968e6e056bb62", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2448": "4c8c2dfc166831ef6b7244bab35a0f2e17b2d352"}]}