{"is_source_file": true, "format": "Python", "description": "Test suite for the 'agent' system, testing tool integrations, streaming, async operations, and custom tools within the 'agno' project.", "external_files": ["agno/agent.py", "agno/models/groq.py", "agno/tools/duckduckgo.py", "agno/tools/exa.py", "agno/tools/yfinance.py"], "external_methods": ["pytest.mark.skip", "pytest.mark.asyncio", "pytest", "Agent.run", "Agent.arun", "BaseModel", "Field"], "published": ["test_tool_use", "test_tool_use_stream", "test_async_tool_use", "test_async_tool_use_stream", "test_parallel_tool_calls", "test_tool_use_with_native_structured_outputs", "test_multiple_tool_calls", "test_tool_call_custom_tool_no_parameters", "test_tool_call_custom_tool_optional_parameters", "test_tool_call_list_parameters"], "classes": [{"name": "StockPrice", "description": "Pydantic model representing stock price information with price and currency fields."}], "methods": [{"name": "test_tool_use", "description": "Tests basic tool usage with YFinanceTools to fetch current stock price."}, {"name": "test_tool_use_stream", "description": "Tests streaming response and detection of tool calls."}, {"name": "test_async_tool_use", "description": "Asynchronous test for tool usage with YFinanceTools."}, {"name": "test_async_tool_use_stream", "description": "Asynchronous streaming test for tool calls detection."}, {"name": "test_parallel_tool_calls", "description": "Tests multiple concurrent tool calls for different stocks."}, {"name": "test_tool_use_with_native_structured_outputs", "description": "Tests structured output with custom StockPrice model."}, {"name": "test_multiple_tool_calls", "description": "Tests multiple tools and content verification."}, {"name": "test_tool_call_custom_tool_no_parameters", "description": "Tests custom tool function without parameters."}, {"name": "test_tool_call_custom_tool_optional_parameters", "description": "Tests custom tool function with optional parameters."}, {"name": "test_tool_call_list_parameters", "description": "Tests tools handling multiple URLs and content extraction."}], "calls": ["Agent.run", "Agent.arun", "pytest.mark.skip", "pytest.mark.asyncio"], "search-terms": ["integration tests", "YFinanceTools", "streaming responses", "async tool calls", "custom tool functions", "structured output", "multiple tools", "tool call detection"], "state": 2, "file_id": 795, "knowledge_revision": 3038, "git_revision": "20598194e3b3de638d996bb8aca3530fc73f38b6", "ctags": [], "filename": "libs/agno/tests/integration/models/groq/test_tool_use.py", "hash": "8f9069aeb0f4095549a6ea7169c74285", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3038": "20598194e3b3de638d996bb8aca3530fc73f38b6"}]}