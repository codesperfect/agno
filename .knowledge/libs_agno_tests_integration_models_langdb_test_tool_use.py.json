{"is_source_file": true, "format": "Python", "description": "Test suite for the 'Agent' class and various tools in the 'langdb' module, verifying tool invocation, streaming responses, async behavior, and parameter handling in an integration testing context.", "external_files": ["agno.agent", "agno.models.langdb", "agno.tools.duckduckgo", "agno.tools.exa", "agno.tools.yfinance"], "external_methods": ["pytest.mark.asyncio", "pytest", "any", "len", "assert"], "published": ["test_tool_use", "test_tool_use_stream", "test_async_tool_use", "test_async_tool_use_stream", "test_tool_use_tool_call_limit", "test_tool_use_with_content", "test_parallel_tool_calls", "test_multiple_tool_calls", "test_tool_call_custom_tool_no_parameters", "test_tool_call_custom_tool_optional_parameters", "test_tool_call_list_parameters"], "classes": [], "methods": [{"name": "test_tool_use", "description": "Tests basic tool invocation and response content for a stock price query."}, {"name": "test_tool_use_stream", "description": "Tests streaming response and detection of tool calls during streaming."}, {"name": "test_async_tool_use", "description": "Asynchronous test for tool invocation and response content."}, {"name": "test_async_tool_use_stream", "description": "Asynchronous streaming test for tool invocation detection."}, {"name": "test_tool_use_tool_call_limit", "description": "Verifies that tool call limit is respected and only one tool is called."}, {"name": "test_tool_use_with_content", "description": "Checks that response contains expected content after tool invocation."}, {"name": "test_parallel_tool_calls", "description": "Verifies multiple tool calls in a single response for multiple stock symbols."}, {"name": "test_multiple_tool_calls", "description": "Checks multiple different tools invoked in a single query."}, {"name": "test_tool_call_custom_tool_no_parameters", "description": "Tests custom tool function with no parameters."}, {"name": "test_tool_call_custom_tool_optional_parameters", "description": "Tests custom tool function with optional parameters."}, {"name": "test_tool_call_list_parameters", "description": "Verifies handling of list parameters in tool calls."}], "calls": ["agno.agent.Agent", "agno.models.langdb.LangDB", "agno.tools.yfinance.YFinanceTools", "agno.tools.duckduckgo.DuckDuckGoTools", "pytest.mark.asyncio", "pytest", "any", "len", "assert"], "search-terms": ["test_tool_use", "streaming_response", "asyncio_tests", "tool_call_limit", "custom_tool_functions", "multiple_tools", "parameter_handling", "integration_tests"], "state": 2, "file_id": 778, "knowledge_revision": 3050, "git_revision": "20598194e3b3de638d996bb8aca3530fc73f38b6", "ctags": [], "filename": "libs/agno/tests/integration/models/langdb/test_tool_use.py", "hash": "538dc07a1f56e44ed8bef6fdd6f6e2d3", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3050": "20598194e3b3de638d996bb8aca3530fc73f38b6"}]}