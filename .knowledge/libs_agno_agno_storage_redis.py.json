{"is_source_file": true, "format": "Python", "description": "This file implements a Redis-based storage backend for session management, including serialization/deserialization, session CRUD operations, and session retrieval with filtering and ordering.", "external_files": ["agno.storage.base", "agno.storage.session", "agno.storage.session.agent", "agno.storage.session.team", "agno.storage.session.workflow", "agno.utils.log", "redis"], "external_methods": ["json.dumps", "json.loads", "time.time", "asdict", "UUIDEncoder.default", "Redis.ping", "Redis.get", "Redis.set", "Redis.delete", "Redis.scan_iter"], "published": ["UUIDEncoder", "RedisStorage"], "classes": [{"name": "UUIDEncoder", "description": "Custom JSON encoder to serialize UUID objects as strings."}, {"name": "RedisStorage", "description": "A storage class that uses Redis to store session data, supporting CRUD operations, filtering, and session retrieval."}], "methods": [{"name": "UUIDEncoder.default", "description": "Serializes UUID objects to their string representation."}, {"name": "RedisStorage.__init__", "description": "Initializes Redis storage with connection parameters and configuration."}, {"name": "RedisStorage._get_key", "description": "Generates Redis key for a given session ID."}, {"name": "RedisStorage.serialize", "description": "Serializes session data to JSON string."}, {"name": "RedisStorage.deserialize", "description": "Deserializes JSON string to dictionary."}, {"name": "RedisStorage.create", "description": "Tests Redis connection; no schema creation needed."}, {"name": "RedisStorage.read", "description": "Reads a session from Redis, returning the appropriate session object based on mode."}, {"name": "RedisStorage.get_all_session_ids", "description": "Retrieves all session IDs, optionally filtered by user or entity ID."}, {"name": "RedisStorage.get_all_sessions", "description": "Retrieves all session objects, optionally filtered."}, {"name": "RedisStorage.get_recent_sessions", "description": "Retrieves the most recent sessions ordered by creation time."}, {"name": "RedisStorage.upsert", "description": "Inserts or updates a session in Redis."}, {"name": "RedisStorage.delete_session", "description": "Deletes a session by session ID."}, {"name": "RedisStorage.drop", "description": "Deletes all sessions with the configured prefix."}, {"name": "RedisStorage.upgrade_schema", "description": "No-op for Redis as it is schema-less."}], "calls": ["json.dumps", "json.loads", "time.time", "super().__init__", "self.redis_client.ping", "self.redis_client.get", "self.redis_client.set", "self.redis_client.delete", "self.redis_client.scan_iter"], "search-terms": ["Redis session storage", "session management", "session filtering", "session retrieval", "session CRUD", "session ordering", "session filtering by entity", "session filtering by user", "session expiration", "session schema-less"], "state": 2, "file_id": 534, "knowledge_revision": 2811, "git_revision": "9dbf8ee4a2e7e1a503ad4b435730ac1adcc34a7b", "ctags": [], "filename": "libs/agno/agno/storage/redis.py", "hash": "98d15cc2b623f078ac5e0f27c3d98932", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2811": "9dbf8ee4a2e7e1a503ad4b435730ac1adcc34a7b"}]}