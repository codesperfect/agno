{"is_source_file": true, "format": "Python", "description": "This file defines a Python class 'MistralChat' that interfaces with the Mistral API to generate chat responses, including methods for synchronous and asynchronous invocation, response parsing, and client configuration. It also imports various external modules and models related to Mistral and project-specific components.", "external_files": ["mistralai", "agno.exceptions", "agno.models.base", "agno.models.message", "agno.models.response", "agno.utils.log", "agno.utils.models.mistral"], "external_methods": ["getenv", "log_debug", "log_error", "format_messages", "response_format_from_pydantic_model"], "published": ["MistralChat"], "classes": [{"name": "MistralChat", "description": "A model class that uses the Mistral API to generate chat responses, supporting both synchronous and asynchronous operations, with response parsing and client management."}], "methods": [{"name": "get_client", "description": "Returns the Mistral client instance, creating it if necessary."}, {"name": "_get_client_params", "description": "Constructs and returns the parameters for initializing the Mistral client, including API key and endpoint."}, {"name": "get_request_params", "description": "Builds and returns the request parameters for API calls, including temperature, max tokens, and tools."}, {"name": "to_dict", "description": "Converts the model instance to a dictionary representation."}, {"name": "invoke", "description": "Sends a chat completion request to the Mistral API synchronously."}, {"name": "invoke_stream", "description": "Streams the response from the Mistral API synchronously."}, {"name": "ainvoke", "description": "Sends a chat completion request asynchronously."}, {"name": "ainvoke_stream", "description": "Streams the response from the Mistral API asynchronously."}, {"name": "parse_provider_response", "description": "Parses the response from the Mistral API into a ModelResponse object."}, {"name": "parse_provider_response_delta", "description": "Parses a delta response from the Mistral API into a ModelResponse object."}], "calls": ["format_messages", "response_format_from_pydantic_model", "self.get_client", "self._get_client_params", "self.get_request_params", "log_debug", "log_error"], "search-terms": ["MistralChat", "mistral", "MistralClient", "response_format_from_pydantic_model", "parse_provider_response_delta"], "state": 2, "file_id": 232, "knowledge_revision": 2507, "git_revision": "69e8f9dc474e69f2d3863442c4c1c6824ca37f08", "ctags": [], "filename": "libs/agno/agno/models/mistral/mistral.py", "hash": "7bf80ca01c3baaf004fb25c6d59ace48", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2507": "69e8f9dc474e69f2d3863442c4c1c6824ca37f08"}]}