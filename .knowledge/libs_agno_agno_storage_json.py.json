{"is_source_file": true, "format": "Python", "description": "This file implements a JSON-based storage backend for session management, including serialization, deserialization, CRUD operations, and session retrieval with filtering and ordering.", "external_files": ["json", "time", "pathlib.Path", "typing.List", "typing.Literal", "typing.Optional", "typing.Union", "agno.storage.base", "agno.storage.session", "agno.storage.session.agent", "agno.storage.session.team", "agno.storage.session.workflow", "agno.utils.log"], "external_methods": ["json.dumps", "json.loads", "Path.mkdir", "Path.exists", "Path.glob", "Session.from_dict", "AgentSession.from_dict", "TeamSession.from_dict", "WorkflowSession.from_dict", "logger.error"], "published": ["JsonStorage"], "classes": [{"name": "JsonStorage", "description": "A storage class that manages sessions stored as JSON files in a directory, supporting CRUD operations, filtering, and schema upgrades."}], "methods": [{"name": "__init__", "description": "Initializes the JsonStorage with a directory path and mode (agent, team, workflow)."}, {"name": "serialize", "description": "Converts a dictionary to a JSON string with indentation."}, {"name": "deserialize", "description": "Parses a JSON string into a dictionary."}, {"name": "create", "description": "Creates the storage directory if it does not exist."}, {"name": "read", "description": "Reads a session from storage by session ID, optionally filtering by user ID."}, {"name": "get_all_session_ids", "description": "Retrieves all session IDs, optionally filtered by user ID and entity ID."}, {"name": "get_all_sessions", "description": "Retrieves all session objects, optionally filtered by user ID and entity ID."}, {"name": "get_recent_sessions", "description": "Retrieves the most recent sessions ordered by creation time, with optional filtering."}, {"name": "upsert", "description": "Inserts or updates a session in storage."}, {"name": "delete_session", "description": "Deletes a session file by session ID."}, {"name": "drop", "description": "Deletes all session files in the storage directory."}, {"name": "upgrade_schema", "description": "Placeholder for schema upgrade logic."}], "calls": ["json.dumps", "json.loads", "Path.mkdir", "Path.exists", "Path.glob", "Session.from_dict", "AgentSession.from_dict", "TeamSession.from_dict", "WorkflowSession.from_dict", "logger.error"], "search-terms": ["JsonStorage", "session management", "file-based session storage", "session filtering", "session retrieval", "session CRUD", "session serialization"], "state": 2, "file_id": 517, "knowledge_revision": 2801, "git_revision": "88b8f942458a148da343660694036160a152bdf2", "ctags": [], "filename": "libs/agno/agno/storage/json.py", "hash": "a5b8a571f5d655719c9065e42c8e7bf2", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2801": "88b8f942458a148da343660694036160a152bdf2"}]}