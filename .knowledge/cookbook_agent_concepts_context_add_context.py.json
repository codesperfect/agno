{"is_source_file": true, "format": "Python", "description": "This file defines a function to fetch top HackerNews stories and creates an agent that uses OpenAI's GPT-4 model to analyze real-time HackerNews data, including example usage.", "external_files": ["agno.agent", "agno.models.openai"], "external_methods": ["httpx.get", "json.dumps"], "published": ["get_top_hackernews_stories", "agent"], "classes": [{"name": "Agent", "description": "A context-aware agent that can process and respond to user prompts, utilizing external data sources and models."}, {"name": "OpenAIChat", "description": "A class representing an OpenAI chat model configuration."}], "methods": [{"name": "get_top_hackernews_stories", "description": "Fetches the top stories from HackerNews and returns them as a formatted JSON string."}], "calls": ["httpx.get", "json.dumps"], "search-terms": ["HackerNews", "get_top_hackernews_stories", "Agent", "OpenAIChat", "add_context"], "state": 2, "file_id": 1861, "knowledge_revision": 4098, "git_revision": "460606bd4e5e183f8786dad7b8f820374bafe3d0", "ctags": [], "filename": "cookbook/agent_concepts/context/add_context.py", "hash": "914f8075c1ff05f7d51fa96619ac7e85", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"4098": "460606bd4e5e183f8786dad7b8f820374bafe3d0"}]}