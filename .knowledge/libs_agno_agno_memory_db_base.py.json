{"is_source_file": true, "format": "Python", "description": "This file defines an abstract base class for a Memory Database, specifying the interface methods that any concrete implementation should provide.", "external_files": ["agno/memory/row.py"], "external_methods": [], "published": ["MemoryDb"], "classes": [{"name": "MemoryDb", "description": "An abstract base class for the Memory Database, outlining essential database operations such as create, read, update, delete, and table management."}], "methods": [{"name": "create", "description": "Abstract method to create the database or table."}, {"name": "memory_exists", "description": "Abstract method to check if a specific memory exists in the database."}, {"name": "read_memories", "description": "Abstract method to read memories with optional filtering by user ID, limit, and sort order."}, {"name": "upsert_memory", "description": "Abstract method to insert or update a memory record."}, {"name": "delete_memory", "description": "Abstract method to delete a memory by its ID."}, {"name": "drop_table", "description": "Abstract method to drop the entire table."}, {"name": "table_exists", "description": "Abstract method to check if the table exists."}, {"name": "clear", "description": "Abstract method to clear all records from the table."}], "calls": [], "search-terms": ["MemoryDb", "abstract class", "database interface", "memory storage", "Python ABC"], "state": 2, "file_id": 117, "knowledge_revision": 2343, "git_revision": "e67ee577664da81d64486d0682baa2083ae8659b", "ctags": [], "filename": "libs/agno/agno/memory/db/base.py", "hash": "29f670c51003bd952d975afd96092936", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2343": "e67ee577664da81d64486d0682baa2083ae8659b"}]}