{"is_source_file": true, "format": "Python", "description": "This file defines the InfraResource class, a base class for managing infrastructure resources, including methods for file handling, filtering, and resource management.", "external_files": ["agno.infra.base", "agno.utils.log", "agno.workspace.helpers", "agno.utils.yaml_io"], "external_methods": ["agno.workspace.helpers.get_workspace_dir_from_env", "agno.utils.yaml_io.write_yaml_file", "agno.utils.yaml_io.read_yaml_file"], "published": ["InfraResource"], "classes": [{"name": "InfraResource", "description": "A base class for infrastructure resources, providing common attributes and methods for resource management, including file operations and filtering."}], "methods": [{"name": "read", "description": "Abstract method to read resource data using a client."}, {"name": "is_active", "description": "Abstract method to check if the resource is active."}, {"name": "create", "description": "Abstract method to create the resource."}, {"name": "update", "description": "Abstract method to update the resource."}, {"name": "delete", "description": "Abstract method to delete the resource."}, {"name": "get_resource_name", "description": "Returns the resource name or class name if name is not set."}, {"name": "get_resource_type", "description": "Returns the resource type, defaulting to class name if not set."}, {"name": "get_resource_type_list", "description": "Returns a list of resource types for filtering, including the resource type and its lowercase form."}, {"name": "get_input_file_path", "description": "Constructs the input file path for the resource based on workspace directory and resource attributes."}, {"name": "get_output_file_path", "description": "Constructs the output file path for the resource based on workspace directory and resource attributes."}, {"name": "save_output_file", "description": "Saves the active resource data to the output YAML file."}, {"name": "read_resource_from_file", "description": "Reads resource data from the output YAML file."}, {"name": "delete_output_file", "description": "Deletes the output YAML file for the resource."}, {"name": "matches_filters", "description": "Checks if the resource matches provided group, name, and type filters."}, {"name": "should_create", "description": "Determines if the resource should be created based on filters and flags."}, {"name": "should_delete", "description": "Determines if the resource should be deleted based on filters and flags."}, {"name": "should_update", "description": "Determines if the resource should be updated based on filters and flags."}, {"name": "__hash__", "description": "Provides a hash based on resource type and name."}, {"name": "__eq__", "description": "Checks equality between two InfraResource instances based on type and name."}], "calls": ["agno.workspace.helpers.get_workspace_dir_from_env", "agno.utils.yaml_io.write_yaml_file", "agno.utils.yaml_io.read_yaml_file"], "search-terms": ["InfraResource", "resource management", "file handling", "yaml serialization", "resource filtering", "base class"], "state": 2, "file_id": 165, "knowledge_revision": 2455, "git_revision": "e67ee577664da81d64486d0682baa2083ae8659b", "ctags": [], "filename": "libs/agno/agno/infra/resource.py", "hash": "82bc0999d6803a708d0a3af44841a870", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2455": "e67ee577664da81d64486d0682baa2083ae8659b"}]}