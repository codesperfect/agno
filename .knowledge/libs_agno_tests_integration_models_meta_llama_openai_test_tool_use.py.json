{"is_source_file": true, "format": "Python", "description": "This file contains test cases for the integration testing of an agent system that interacts with various tools and models, specifically testing tool invocation, streaming responses, asynchronous operations, and custom tool functions within the context of the LlamaOpenAI model.", "external_files": ["agno.agent", "agno.models.meta", "agno.tools.duckduckgo", "agno.tools.yfinance"], "external_methods": ["pytest.mark.asyncio", "pytest"], "published": [], "classes": [], "methods": [{"name": "test_tool_use", "description": "Tests basic tool invocation and response content verification for the agent."}, {"name": "test_tool_use_stream", "description": "Tests streaming responses from the agent and verifies tool call detection within streamed chunks."}, {"name": "test_async_tool_use", "description": "Tests asynchronous tool invocation and response content verification."}, {"name": "test_async_tool_use_stream", "description": "Tests asynchronous streaming responses and verifies tool call detection within streamed chunks."}, {"name": "test_tool_use_with_content", "description": "Tests tool invocation with a combined query and verifies multiple content assertions."}, {"name": "test_parallel_tool_calls", "description": "Tests multiple tool calls within a single agent run and verifies content contains expected tokens."}, {"name": "test_multiple_tool_calls", "description": "Tests multiple different tools invoked in a single run and verifies content."}, {"name": "test_tool_call_custom_tool_no_parameters", "description": "Tests a custom tool function without parameters, skipped for Llama models."}, {"name": "test_tool_call_custom_tool_optional_parameters", "description": "Tests a custom tool function with optional parameters and verifies response content."}], "calls": ["agno.agent.Agent", "agno.agent.RunResponse", "agno.models.meta.LlamaOpenAI", "agno.tools.yfinance.YFinanceTools", "agno.tools.duckduckgo.DuckDuckGoTools"], "search-terms": ["test_tool_use", "asyncio", "streaming", "custom tools", "LlamaOpenAI", "integration tests", "tool invocation", "response content verification"], "state": 2, "file_id": 809, "knowledge_revision": 3037, "git_revision": "20598194e3b3de638d996bb8aca3530fc73f38b6", "ctags": [], "filename": "libs/agno/tests/integration/models/meta/llama_openai/test_tool_use.py", "hash": "09d69e0f6fc342d95f60b06b864d2ca2", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3037": "20598194e3b3de638d996bb8aca3530fc73f38b6"}]}