{"is_source_file": true, "format": "Python", "description": "This file defines a DockerTools class that provides an interface for managing Docker containers, images, volumes, and networks using the docker Python SDK. It includes methods for listing, creating, removing, inspecting, and executing commands within Docker entities, as well as handling Docker daemon connectivity and compatibility patches for Python 3.12.", "external_files": ["docker", "docker.errors", "agno.tools", "agno.utils.log"], "external_methods": ["docker.DockerClient", "docker.errors.DockerException", "docker.errors.ImageNotFound"], "published": ["DockerTools"], "classes": [{"name": "DockerTools", "description": "A class that extends Toolkit to provide Docker management functionalities such as container, image, volume, and network operations using the docker SDK."}], "methods": [{"name": "_check_docker_availability", "description": "Checks for the existence of Docker socket paths to verify Docker daemon accessibility."}, {"name": "list_containers", "description": "Lists Docker containers with details such as ID, name, image, status, creation time, ports, and labels."}, {"name": "start_container", "description": "Starts a specified Docker container by ID or name."}, {"name": "stop_container", "description": "Stops a specified Docker container with an optional timeout."}, {"name": "remove_container", "description": "Removes a specified Docker container, with options to force removal and remove associated volumes."}, {"name": "get_container_logs", "description": "Retrieves logs from a specified Docker container, with options for tail and streaming."}, {"name": "inspect_container", "description": "Provides detailed information about a container in JSON format."}, {"name": "run_container", "description": "Runs a new Docker container with specified parameters such as image, command, ports, volumes, environment, and network."}, {"name": "exec_in_container", "description": "Executes a command inside a running container and returns the output."}, {"name": "list_images", "description": "Lists Docker images with details like ID, tags, creation time, size, and labels."}, {"name": "pull_image", "description": "Pulls a Docker image from a registry."}, {"name": "remove_image", "description": "Removes a Docker image by ID or name."}, {"name": "build_image", "description": "Builds a Docker image from a specified directory and Dockerfile."}, {"name": "tag_image", "description": "Tags a Docker image with a repository and optional tag."}, {"name": "inspect_image", "description": "Provides detailed information about an image in JSON format."}, {"name": "list_volumes", "description": "Lists Docker volumes with details such as name, driver, mount point, creation time, and labels."}, {"name": "create_volume", "description": "Creates a new Docker volume with specified name, driver, and labels."}, {"name": "remove_volume", "description": "Removes a Docker volume by name."}, {"name": "inspect_volume", "description": "Provides detailed information about a volume in JSON format."}, {"name": "list_networks", "description": "Lists Docker networks with details such as ID, name, driver, scope, creation time, internal flag, and connected containers."}, {"name": "create_network", "description": "Creates a Docker network with specified name, driver, internal flag, and labels."}, {"name": "remove_network", "description": "Removes a Docker network by name."}, {"name": "inspect_network", "description": "Provides detailed information about a network in JSON format."}, {"name": "connect_container_to_network", "description": "Connects a container to a specified network."}, {"name": "disconnect_container_from_network", "description": "Disconnects a container from a specified network."}], "calls": ["docker.DockerClient", "docker.errors.DockerException", "docker.errors.ImageNotFound", "json.dumps", "os.path.exists", "os.environ", "logger.info", "logger.warning", "logger.error"], "search-terms": ["Docker SDK", "Container management", "Image management", "Volume management", "Network management", "Python Docker", "docker.py", "DockerTools class"], "state": 2, "file_id": 461, "knowledge_revision": 2727, "git_revision": "a738a4771a46c6dfb17a1494a80ff1dbe8e58976", "ctags": [], "filename": "libs/agno/agno/tools/docker.py", "hash": "f42606fe570dccc98baa4d1bf06b65aa", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2727": "a738a4771a46c6dfb17a1494a80ff1dbe8e58976"}]}