{"is_source_file": true, "format": "Python", "description": "This file defines the AwsApp class, which extends InfraApp to configure and build AWS infrastructure resources such as ECS clusters, load balancers, target groups, listeners, and ECS containers for an application deployment. It includes methods for resource creation, environment setup, security group management, and resource assembly.", "external_files": ["agno.aws.context", "agno.infra.app", "agno.infra.context", "agno.utils.log", "agno.aws.resource.base", "agno.aws.resource.ec2.security_group", "agno.aws.resource.ecs.cluster", "agno.aws.resource.ecs.container", "agno.aws.resource.ecs.service", "agno.aws.resource.ecs.task_definition", "agno.aws.resource.elb.listener", "agno.aws.resource.elb.load_balancer", "agno.aws.resource.elb.target_group", "agno.docker.resource.image", "agno.utils.defaults", "agno.constants"], "external_methods": ["logger.debug", "logger.error", "self.get_app_name", "self.get_image_str", "self.get_container_env", "self.get_container_command", "self.get_ecs_container_port_mappings", "self.get_ecs_container", "self.get_ecs_task_definition", "self.get_ecs_service", "self.get_all_security_groups", "self.get_load_balancer", "self.get_target_group", "self.get_listeners", "self.get_container_context", "self.set_aws_env_vars", "self.get_env_file_data", "self.get_secret_file_data", "self.get_security_groups", "self.security_group_definition", "self.get_load_balancer_security_groups", "self.get_app_name", "self.build_resources"], "published": ["AwsApp"], "classes": [{"name": "AwsApp", "description": "A class that manages the configuration and deployment of AWS infrastructure components for an application, including ECS clusters, load balancers, target groups, listeners, security groups, and containers."}], "methods": [{"name": "get_container_context", "description": "Builds and returns the container context, including workspace details and schema."}, {"name": "get_container_env", "description": "Generates environment variables for the container based on configuration, secrets, and context."}, {"name": "get_load_balancer_security_groups", "description": "Creates or retrieves security groups for the load balancer, including rules for HTTP/HTTPS traffic."}, {"name": "security_group_definition", "description": "Defines the security group for the application, including inbound rules from load balancer and other security groups."}, {"name": "get_security_groups", "description": "Retrieves or creates security groups for the application service."}, {"name": "get_all_security_groups", "description": "Aggregates all security groups related to the load balancer and service."}, {"name": "ecs_cluster_definition", "description": "Creates an ECS cluster resource with specified parameters."}, {"name": "get_ecs_cluster", "description": "Retrieves or creates the ECS cluster based on configuration."}, {"name": "load_balancer_definition", "description": "Creates a load balancer resource with specified subnets and security groups."}, {"name": "get_load_balancer", "description": "Retrieves or creates the load balancer resource."}, {"name": "target_group_definition", "description": "Creates a target group for load balancing with specified parameters."}, {"name": "get_target_group", "description": "Retrieves or creates the target group."}, {"name": "listeners_definition", "description": "Defines listeners for the load balancer, including HTTPS redirection if enabled."}, {"name": "get_listeners", "description": "Retrieves or creates load balancer listeners."}, {"name": "get_container_command", "description": "Returns the container command as a list of strings."}, {"name": "get_ecs_container_port_mappings", "description": "Provides port mappings for the ECS container, including service connect configuration."}, {"name": "get_ecs_container", "description": "Creates an ECS container resource with environment, command, and logging configuration."}, {"name": "get_ecs_task_definition", "description": "Defines the ECS task definition including container and resource specifications."}, {"name": "get_ecs_service", "description": "Creates an ECS service resource, optionally with service connect configuration."}, {"name": "build_resources", "description": "Builds and returns a list of all AWS resources needed for deploying the application, including security groups, ECS cluster, load balancer, target group, listeners, ECS containers, task definitions, and services."}], "calls": ["logger.debug", "logger.error", "self.get_app_name", "self.get_image_str", "self.get_container_env", "self.get_container_command", "self.get_ecs_container_port_mappings", "self.get_ecs_container", "self.get_ecs_task_definition", "self.get_ecs_service", "self.get_all_security_groups", "self.get_load_balancer", "self.get_target_group", "self.get_listeners", "self.get_container_context", "self.set_aws_env_vars", "self.get_env_file_data", "self.get_secret_file_data", "self.get_security_groups", "self.security_group_definition", "self.get_load_balancer_security_groups", "self.build_resources"], "search-terms": ["AwsApp", "ECS", "load balancer", "security group", "target group", "listeners", "container environment", "nginx reverse proxy", "AWS infrastructure", "container context", "resource definitions"], "state": 2, "file_id": 76, "knowledge_revision": 2386, "git_revision": "e67ee577664da81d64486d0682baa2083ae8659b", "ctags": [], "filename": "libs/infra/agno_aws/agno/aws/app/base.py", "hash": "5363aba107e503dae0252819f5598a1e", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2386": "e67ee577664da81d64486d0682baa2083ae8659b"}]}