{"is_source_file": true, "format": "Python", "description": "This file defines the MemoryManager class, which manages user memories in a system, including adding, updating, deleting, and clearing memories, as well as generating system messages and handling model responses.", "external_files": ["agno.memory.db", "agno.memory.memory", "agno.memory.row", "agno.models.base", "agno.models.message", "agno.tools.function", "agno.utils.log"], "external_methods": ["agno.memory.db.MemoryDb.read_memories", "agno.memory.db.MemoryDb.upsert_memory", "agno.memory.db.MemoryDb.delete_memory", "agno.memory.db.MemoryDb.clear", "agno.memory.memory.Memory.to_dict", "agno.models.base.Model", "agno.models.message.Message", "agno.tools.function.Function.from_callable", "agno.utils.log.log_debug", "agno.utils.log.logger", "agno.models.openai.OpenAIChat"], "published": ["MemoryManager"], "classes": [{"name": "MemoryManager", "description": "A class that manages user memories, including CRUD operations and interaction with a language model."}], "methods": [{"name": "update_model", "description": "Sets the default model to OpenAIChat if none is provided."}, {"name": "determine_tools_for_model", "description": "Prepares the tools and functions for the model, including adding memory management functions."}, {"name": "get_existing_memories", "description": "Retrieves existing memories from the database."}, {"name": "add_memory", "description": "Adds a new memory to the database."}, {"name": "delete_memory", "description": "Deletes a memory from the database by ID."}, {"name": "update_memory", "description": "Updates an existing memory in the database."}, {"name": "clear_memory", "description": "Clears all memories from the database."}, {"name": "get_system_message", "description": "Generates a system message instructing the model on how to handle memories."}, {"name": "run", "description": "Executes the memory management process synchronously, interacting with the model."}, {"name": "arun", "description": "Asynchronous version of run, interacting with the model asynchronously."}], "calls": ["agno.models.openai.OpenAIChat", "agno.memory.db.MemoryDb.read_memories", "agno.memory.db.MemoryDb.upsert_memory", "agno.memory.db.MemoryDb.delete_memory", "agno.memory.db.MemoryDb.clear", "agno.models.message.Message", "agno.tools.function.Function.from_callable", "agno.utils.log.log_debug", "agno.utils.log.logger"], "search-terms": ["MemoryManager", "memory CRUD", "system message generation", "memory database interaction", "async memory management", "model interaction"], "state": 2, "file_id": 114, "knowledge_revision": 2385, "git_revision": "d4307c639766c000191701a9d20095e2c4685947", "ctags": [], "filename": "libs/agno/agno/memory/manager.py", "hash": "05f8aceb6eaf6c4853dfe9bff2d0051d", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2385": "d4307c639766c000191701a9d20095e2c4685947"}]}