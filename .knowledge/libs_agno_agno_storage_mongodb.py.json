{"is_source_file": true, "format": "Python", "description": "This file implements a MongoDB storage backend class for managing sessions related to agents, teams, and workflows within a larger application. It includes methods for creating indexes, reading, writing, updating, deleting, and retrieving sessions, as well as handling schema upgrades and deep copying of the storage object.", "external_files": ["agno.storage.base", "agno.storage.session", "agno.storage.session.agent", "agno.storage.session.team", "agno.storage.session.workflow", "agno.utils.log", "pymongo"], "external_methods": ["AgentSession.from_dict", "TeamSession.from_dict", "WorkflowSession.from_dict", "log_debug", "logger.error", "logger.warning"], "published": ["MongoDbStorage"], "classes": [{"name": "MongoDbStorage", "description": "A class providing MongoDB-based storage for session data, supporting CRUD operations, index management, and schema upgrades."}], "methods": [{"name": "__init__", "description": "Initializes the MongoDbStorage with connection parameters, setting up the database and collection."}, {"name": "create", "description": "Creates indexes on the collection for efficient querying."}, {"name": "read", "description": "Reads a session from MongoDB based on session_id and optional user_id."}, {"name": "get_all_session_ids", "description": "Retrieves all session IDs matching optional user and entity filters."}, {"name": "get_all_sessions", "description": "Retrieves all sessions matching optional user and entity filters."}, {"name": "get_recent_sessions", "description": "Retrieves the most recent sessions, limited by a specified number."}, {"name": "upsert", "description": "Inserts or updates a session in the database, handling versioning and timestamps."}, {"name": "delete_session", "description": "Deletes a session by session_id."}, {"name": "drop", "description": "Drops the entire collection."}, {"name": "upgrade_schema", "description": "Placeholder method for schema upgrades."}, {"name": "__deepcopy__", "description": "Creates a deep copy of the storage object, reusing MongoDB connections."}], "calls": ["super().__init__", "self.collection.create_index", "self.collection.find_one", "AgentSession.from_dict", "TeamSession.from_dict", "WorkflowSession.from_dict", "self.collection.find", "self.collection.update_one", "self.collection.delete_one", "self.collection.drop", "deepcopy"], "search-terms": ["MongoDB session storage", "agent/session management", "session index creation", "session CRUD operations", "MongoDB index handling", "session upsert", "deepcopy storage"], "state": 2, "file_id": 525, "knowledge_revision": 2769, "git_revision": "88b8f942458a148da343660694036160a152bdf2", "ctags": [], "filename": "libs/agno/agno/storage/mongodb.py", "hash": "551e5b3bfb3605db22643304e618ef79", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2769": "88b8f942458a148da343660694036160a152bdf2"}]}