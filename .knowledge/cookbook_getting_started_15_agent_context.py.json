{"is_source_file": true, "format": "Python", "description": "This Python source file demonstrates how to create an agent with dependency injection for external data, specifically fetching top HackerNews stories and integrating with an AI model.", "external_files": ["agno.agent", "agno.models.openai"], "external_methods": ["httpx.get", "json.dumps", "textwrap.dedent", "Agent", "OpenAIChat"], "published": ["get_top_hackernews_stories", "agent"], "classes": [{"name": "Agent", "description": "A class representing an AI agent capable of processing instructions and context."}, {"name": "OpenAIChat", "description": "A class representing an OpenAI chat model configuration."}], "methods": [{"name": "get_top_hackernews_stories", "description": "Fetches the top stories from HackerNews and returns them as a JSON string."}], "calls": ["httpx.get", "json.dumps", "Agent", "OpenAIChat"], "search-terms": ["agent", "dependency injection", "HackerNews", "top stories", "OpenAIChat"], "state": 2, "file_id": 1104, "knowledge_revision": 3388, "git_revision": "460606bd4e5e183f8786dad7b8f820374bafe3d0", "ctags": [], "filename": "cookbook/getting_started/15_agent_context.py", "hash": "efeea089811842b08a56d6722f01c186", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3388": "460606bd4e5e183f8786dad7b8f820374bafe3d0"}]}