{"is_source_file": true, "format": "Python", "description": "This file contains test cases for the DocxKnowledgeBase class and its integration with the Agent class, including setup fixtures, asynchronous and synchronous tests, and filtering behavior.", "external_files": ["os", "pathlib.Path", "pytest", "agno.agent.Agent", "agno.knowledge.docx.DocxKnowledgeBase", "agno.vectordb.lancedb.LanceDb"], "external_methods": ["os.urandom", "Path.parent", "Path /", "LanceDb.drop", "LanceDb.exists", "LanceDb.get_count", "LanceDb.async_exists", "LanceDb.async_get_count", "Agent.run", "Agent.arun"], "published": ["setup_vector_db", "get_test_data_dir", "get_filtered_data_dir", "prepare_knowledge_base", "aprepare_knowledge_base", "test_docx_knowledge_base_directory", "test_docx_knowledge_base_async_directory", "test_text_knowledge_base_with_metadata_path", "test_docx_knowledge_base_with_metadata_path_invalid_filter", "test_knowledge_base_with_valid_filter", "test_knowledge_base_with_run_level_filter"], "classes": [], "methods": [{"name": "setup_vector_db", "description": "Fixture to set up a temporary LanceDb instance for testing."}, {"name": "get_test_data_dir", "description": "Returns the path to the test data directory."}, {"name": "get_filtered_data_dir", "description": "Returns the path to the filtered test data directory."}, {"name": "prepare_knowledge_base", "description": "Creates and loads a DocxKnowledgeBase with sample documents and metadata."}, {"name": "aprepare_knowledge_base", "description": "Asynchronous version of prepare_knowledge_base, loads documents asynchronously."}, {"name": "test_docx_knowledge_base_directory", "description": "Tests loading a directory of DOCX files into the knowledge base and querying via Agent."}, {"name": "test_docx_knowledge_base_async_directory", "description": "Asynchronous test for loading DOCX files and querying with Agent."}, {"name": "test_text_knowledge_base_with_metadata_path", "description": "Tests loading DOCX files with metadata specified via path list and querying with filters."}, {"name": "test_docx_knowledge_base_with_metadata_path_invalid_filter", "description": "Tests filtering with invalid metadata filters and verifies no invalid filters are used in search."}, {"name": "test_knowledge_base_with_valid_filter", "description": "Tests filtering the knowledge base with valid filters and verifies the response content."}, {"name": "test_knowledge_base_with_run_level_filter", "description": "Tests passing filters at run time and verifies the filtered response."}], "calls": ["os.urandom", "LanceDb.drop", "Path.parent", "Path /", "LanceDb.exists", "LanceDb.get_count", "LanceDb.async_exists", "LanceDb.async_get_count", "Agent.run", "Agent.arun"], "search-terms": ["DocxKnowledgeBase", "test_docx_knowledge_base_directory", "async_load", "metadata_filters", "knowledge_base_filters", "integration_tests"], "state": 2, "file_id": 716, "knowledge_revision": 2962, "git_revision": "6f79346d9babccb9b93ca5930a43b1b38f5cc80b", "ctags": [], "filename": "libs/agno/tests/integration/knowledge/test_docx_knowledge_base.py", "hash": "c44a7f21049051a52854e75894de325a", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2962": "6f79346d9babccb9b93ca5930a43b1b38f5cc80b"}]}