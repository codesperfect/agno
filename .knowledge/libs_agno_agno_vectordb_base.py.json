{"is_source_file": true, "format": "Python", "description": "This file defines an abstract base class for vector database implementations, specifying the interface methods that concrete subclasses should implement for creating, checking existence, inserting, searching, and deleting vector databases.", "external_files": ["agno/document.py"], "external_methods": ["Document"], "published": ["VectorDb"], "classes": [{"name": "VectorDb", "description": "Abstract base class for vector database implementations, defining the required interface methods."}], "methods": [{"name": "create", "description": "Abstract method to create the vector database."}, {"name": "async_create", "description": "Asynchronous version of create method."}, {"name": "doc_exists", "description": "Check if a document exists in the database."}, {"name": "async_doc_exists", "description": "Asynchronous check if a document exists."}, {"name": "name_exists", "description": "Check if a name exists in the database."}, {"name": "async_name_exists", "description": "Asynchronous check if a name exists."}, {"name": "id_exists", "description": "Check if an ID exists in the database."}, {"name": "insert", "description": "Insert documents into the database."}, {"name": "async_insert", "description": "Asynchronous insertion of documents."}, {"name": "upsert_available", "description": "Indicates if upsert operation is available; defaults to False."}, {"name": "upsert", "description": "Insert or update documents in the database."}, {"name": "async_upsert", "description": "Asynchronous upsert operation."}, {"name": "search", "description": "Search documents based on a query."}, {"name": "async_search", "description": "Asynchronous search method."}, {"name": "vector_search", "description": "Perform a vector-based search."}, {"name": "keyword_search", "description": "Perform a keyword-based search."}, {"name": "hybrid_search", "description": "Perform a hybrid search combining multiple methods."}, {"name": "drop", "description": "Drop or delete the database."}, {"name": "async_drop", "description": "Asynchronous drop operation."}, {"name": "exists", "description": "Check if the database exists."}, {"name": "async_exists", "description": "Asynchronous check for database existence."}, {"name": "optimize", "description": "Optimize the database."}, {"name": "delete", "description": "Delete the database."}], "calls": ["raise NotImplementedError", "return False"], "search-terms": ["VectorDb", "abstract class", "vector database interface", "async methods", "document existence", "search methods"], "state": 2, "file_id": 553, "knowledge_revision": 2823, "git_revision": "38dbf34af8dec4dc0ab9982777433a07e520ed45", "ctags": [], "filename": "libs/agno/agno/vectordb/base.py", "hash": "57e7d20fe389164ea0ec18eda445eef7", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2823": "38dbf34af8dec4dc0ab9982777433a07e520ed45"}]}