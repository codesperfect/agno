{"is_source_file": true, "format": "Python", "description": "This Python source file defines a complex workflow class 'BlogPostGenerator' for generating professional blog posts by orchestrating multiple AI agents for research, content extraction, and writing. It includes class definitions, method implementations, and an executable script for running the workflow with caching and user prompts.", "external_files": ["agno.agent", "agno.models.openai", "agno.run.workflow", "agno.storage.sqlite", "agno.tools.duckduckgo-search", "agno.tools.newspaper4k", "agno.utils.log", "agno.utils.pprint", "agno.workflow", "pydantic"], "external_methods": ["Agent", "OpenAIChat", "WorkflowCompletedEvent", "SqliteStorage", "DuckDuckGoTools", "Newspaper4kTools", "logger.info", "logger.warning", "logger.error", "pprint_run_response", "SearchResults.model_validate", "ScrapedArticle.model_validate", "RunResponse", "Workflow"], "published": ["BlogPostGenerator", "NewsArticle", "SearchResults", "ScrapedArticle"], "classes": [{"name": "NewsArticle", "description": "Data model representing a news article with title, URL, and optional summary."}, {"name": "SearchResults", "description": "Data model encapsulating a list of news articles as search results."}, {"name": "ScrapedArticle", "description": "Data model representing a fully scraped article with title, URL, optional summary, and content."}, {"name": "BlogPostGenerator", "description": "Workflow class orchestrating AI agents to generate a professional blog post based on web research and content extraction."}], "methods": [{"name": "run", "description": "Main method executing the multi-stage blog post generation process, including caching, searching, scraping, and writing."}, {"name": "get_cached_blog_post", "description": "Retrieve a cached blog post for a given topic if available."}, {"name": "add_blog_post_to_cache", "description": "Store a generated blog post in the cache associated with a topic."}, {"name": "get_cached_search_results", "description": "Retrieve cached search results for a topic if available."}, {"name": "add_search_results_to_cache", "description": "Cache search results for a specific topic."}, {"name": "get_cached_scraped_articles", "description": "Retrieve cached scraped articles for a topic if available."}, {"name": "add_scraped_articles_to_cache", "description": "Cache scraped articles for a topic."}, {"name": "get_search_results", "description": "Perform web search for a topic, utilizing cache and retries."}, {"name": "scrape_articles", "description": "Extract content from search result articles, utilizing cache."}], "calls": ["logger.info", "logger.warning", "logger.error", "self.get_cached_blog_post", "self.get_search_results", "self.scrape_articles", "self.writer.run", "self.add_blog_post_to_cache", "self.get_cached_search_results", "self.add_search_results_to_cache", "self.get_cached_scraped_articles", "self.add_scraped_articles_to_cache", "self.searcher.run", "self.article_scraper.run"], "search-terms": ["BlogPostGenerator", "AI Content Creation", "web research workflow", "content extraction", "content caching", "article scraping", "multi-agent orchestration", "content writing with SEO"], "state": 2, "file_id": 1586, "knowledge_revision": 3876, "git_revision": "c4cabc851178c113c4f14aa2047e2d99383e83c5", "ctags": [], "filename": "cookbook/workflows/blog_post_generator.py", "hash": "894c9e097865bfa9c81a7764b2dc9451", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3876": "c4cabc851178c113c4f14aa2047e2d99383e83c5"}]}