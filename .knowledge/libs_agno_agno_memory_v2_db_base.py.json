{"is_source_file": true, "format": "Python", "description": "This file defines an abstract base class for a Memory Database, specifying the interface methods that any concrete implementation should provide, such as create, read, update, delete, and table management operations.", "external_files": ["agno.memory.v2.db.schema"], "external_methods": [], "published": ["MemoryDb"], "classes": [{"name": "MemoryDb", "description": "An abstract base class for a Memory Database, outlining the required methods for managing memory records."}], "methods": [{"name": "create", "description": "Abstract method to create the database or table."}, {"name": "memory_exists", "description": "Abstract method to check if a memory record exists."}, {"name": "read_memories", "description": "Abstract method to read memory records with optional filtering and sorting."}, {"name": "upsert_memory", "description": "Abstract method to insert or update a memory record."}, {"name": "delete_memory", "description": "Abstract method to delete a memory record by ID."}, {"name": "drop_table", "description": "Abstract method to drop the memory table."}, {"name": "table_exists", "description": "Abstract method to check if the memory table exists."}, {"name": "clear", "description": "Abstract method to clear all memory records."}], "calls": [], "search-terms": ["MemoryDb", "abstract class", "database interface", "memory management", "schema"], "state": 2, "file_id": 106, "knowledge_revision": 2341, "git_revision": "9dbbb3aad1441a6e4286c02f3d75b29a74dd3623", "ctags": [], "filename": "libs/agno/agno/memory/v2/db/base.py", "hash": "816055174899818e0cb0e80e417a3fb6", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2341": "9dbbb3aad1441a6e4286c02f3d75b29a74dd3623"}]}