{"is_source_file": true, "format": "Python", "description": "This file contains utility functions, class definitions, and CSS styling for rendering and managing chess boards within a Streamlit application. It includes classes for representing chess states, methods for making moves, rendering boards, and displaying move history with miniatures, as well as CSS styles for visual presentation.", "external_files": ["chess", "streamlit", "agno.agent"], "external_methods": ["chess.Move.from_uci", "chess.Board", "chess.Move.uci", "chess.Board.legal_moves", "chess.Board.push", "chess.Board.fen", "chess.Board.is_game_over", "chess.Board.is_checkmate", "chess.Board.is_stalemate", "chess.Board.is_insufficient_material", "chess.Board.is_fifty_moves", "chess.Board.is_repetition"], "published": ["SimpleChessBoard", "ChessBoard", "display_board", "show_agent_status", "display_move_history", "parse_move", "is_claude_thinking_model"], "classes": [{"name": "SimpleChessBoard", "description": "Represents a simplified chess board with Unicode visualization, allowing manual updates and validation."}, {"name": "ChessBoard", "description": "Wraps the python-chess Board object, providing move validation, state retrieval, and game status checks."}], "methods": [{"name": "get_board_state", "description": "Returns an HTML string representing the current state of the simple chess board with CSS classes."}, {"name": "update_position", "description": "Updates the internal board state with a move from a source to a destination position."}, {"name": "is_valid_move", "description": "Validates if a move string (e.g., 'e2e4') is in correct format."}, {"name": "algebraic_to_index", "description": "Converts algebraic notation (e.g., 'e2e4') to board indices."}, {"name": "get_piece_name", "description": "Returns the full name of a piece given its symbol."}, {"name": "get_piece_at_position", "description": "Returns the piece symbol at a given board coordinate."}, {"name": "make_move", "description": "Attempts to make a move on the chess board using python-chess, returning success status and message."}, {"name": "get_board_state", "description": "Returns a string representation of the current board in FEN notation."}, {"name": "get_fen", "description": "Returns the FEN string of the current game state."}, {"name": "get_legal_moves", "description": "Returns a list of legal moves in UCI format for the current or specified player."}, {"name": "is_game_over", "description": "Checks if the game has ended."}, {"name": "get_game_state", "description": "Provides detailed information about the current game state, including result and reason if over."}], "calls": ["chess.Move.from_uci", "chess.Board", "chess.Move.uci", "chess.Board.legal_moves", "chess.Board.push", "chess.Board.fen", "chess.Board.is_game_over", "chess.Board.is_checkmate", "chess.Board.is_stalemate", "chess.Board.is_insufficient_material", "chess.Board.is_fifty_moves", "chess.Board.is_repetition"], "search-terms": ["Streamlit chess utils", "CSS styling for chess", "chess board rendering", "move validation", "move history miniatures", "python-chess integration", "agent status display", "move parsing"], "state": 2, "file_id": 929, "knowledge_revision": 3233, "git_revision": "e7f97f04bb91b897397a791b190d51ad78caf24c", "ctags": [], "filename": "cookbook/examples/streamlit_apps/chess_team/utils.py", "hash": "5b9c16e29a79424ff744bc99d281fd13", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3233": "e7f97f04bb91b897397a791b190d51ad78caf24c"}]}