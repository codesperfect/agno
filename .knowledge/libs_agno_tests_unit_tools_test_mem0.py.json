{"is_source_file": true, "format": "Python", "description": "This is a test module for the Mem0Tools class, containing unit tests that mock dependencies and verify the behavior of methods related to memory management, including adding, searching, retrieving, and deleting memories, with specific focus on user_id handling and configuration options.", "external_files": ["agno.tools.mem0"], "external_methods": ["agno.tools.mem0.Mem0Tools"], "published": [], "classes": [{"name": "TestMem0Toolkit", "description": "A test class containing various unit tests for the Mem0Tools class, verifying its behavior under different scenarios."}], "methods": [{"name": "test_init_with_config", "description": "Tests initialization of Mem0Tools with configuration and mocks."}, {"name": "test_init_with_api_key", "description": "Tests initialization of Mem0Tools with an API key."}, {"name": "test_get_user_id_from_arg", "description": "Verifies that user_id is correctly retrieved from method argument."}, {"name": "test_get_user_id_no_id_provided", "description": "Checks behavior when no user_id is provided."}, {"name": "test_add_memory_success_arg_id", "description": "Tests adding memory with a specified user_id."}, {"name": "test_add_memory_dict_message", "description": "Tests adding memory with a dictionary message content."}, {"name": "test_add_memory_invalid_message_type", "description": "Tests adding memory with an invalid message type (non-string/dict)."}, {"name": "test_add_memory_no_user_id", "description": "Verifies error handling when user_id is missing during add_memory."}, {"name": "test_search_memory_success_arg_id", "description": "Tests searching memory with a specified user_id."}, {"name": "test_search_memory_success_default_call", "description": "Tests default search behavior when no user_id is set."}, {"name": "test_search_memory_no_user_id", "description": "Checks error handling when user_id is missing during search."}, {"name": "test_search_memory_api_key_list_return", "description": "Tests search via Mem0Tools API key with list return."}, {"name": "test_get_all_memories_success", "description": "Tests retrieval of all memories via API key."}, {"name": "test_get_all_memories_success_dict_return", "description": "Tests retrieval of all memories with dict return via configuration."}, {"name": "test_get_all_memories_no_user_id", "description": "Checks error handling when user_id is missing during get_all_memories."}, {"name": "test_get_all_memories_error", "description": "Tests error handling during get_all_memories when an exception occurs."}, {"name": "test_delete_all_memories_success", "description": "Tests successful deletion of all memories."}, {"name": "test_delete_all_memories_no_user_id", "description": "Checks error handling when user_id is missing during delete_all_memories."}, {"name": "test_delete_all_memories_error", "description": "Tests error handling during delete_all_memories when an exception occurs."}, {"name": "test_add_memory_with_infer_false", "description": "Verifies that the 'infer' parameter can be set to False during add_memory."}], "calls": ["agno.tools.mem0.Mem0Tools", "agno.tools.mem0.Mem0Tools.add_memory", "agno.tools.mem0.Mem0Tools.search_memory", "agno.tools.mem0.Mem0Tools.get_all_memories", "agno.tools.mem0.Mem0Tools.delete_all_memories"], "search-terms": ["unit tests", "mock memory", "Mem0Tools", "test_mem0.py", "memory management", "user_id handling", "pytest fixtures", "mock dependencies"], "state": 2, "file_id": 651, "knowledge_revision": 2894, "git_revision": "b89f59925b50906ae63fcab70b7cbebe9d2a1691", "ctags": [], "filename": "libs/agno/tests/unit/tools/test_mem0.py", "hash": "013f50de4dfa384f5d3f58c83328038b", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2894": "b89f59925b50906ae63fcab70b7cbebe9d2a1691"}]}