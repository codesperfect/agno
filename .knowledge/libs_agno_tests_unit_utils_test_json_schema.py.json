{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for the JSON schema generation utilities, including tests for handling pydantic models, dataclasses, nested structures, and various data types.", "external_files": ["agno.utils.json_schema"], "external_methods": ["get_json_schema", "get_json_schema_for_arg", "get_json_type_for_py_type", "is_origin_union_type"], "published": [], "classes": [{"name": "MockPydanticModel", "description": "A mock pydantic model used for testing JSON schema generation."}, {"name": "MockDataclass", "description": "A mock dataclass used for testing JSON schema generation."}, {"name": "AddressModel", "description": "A nested pydantic model representing an address."}, {"name": "ContactInfoModel", "description": "A nested pydantic model representing contact information, including an address."}, {"name": "UserProfileModel", "description": "A nested pydantic model representing a user profile with contact info and preferences."}, {"name": "AddressDataclass", "description": "A nested dataclass representing an address."}, {"name": "ContactInfoDataclass", "description": "A nested dataclass representing contact information, including an address."}, {"name": "UserProfileDataclass", "description": "A nested dataclass representing a user profile with contact info and preferences."}], "methods": [{"name": "test_get_json_type_for_py_type", "description": "Tests the mapping from Python types to JSON schema types."}, {"name": "test_is_origin_union_type", "description": "Tests detection of Union types."}, {"name": "test_get_json_schema_for_arg_basic_types", "description": "Tests JSON schema generation for basic Python types."}, {"name": "test_get_json_schema_for_arg_collections", "description": "Tests JSON schema generation for collection types like List and Dict."}, {"name": "test_get_json_schema_for_arg_union", "description": "Tests JSON schema generation for Union and Optional types."}, {"name": "test_get_json_schema_basic", "description": "Tests JSON schema generation for simple type hints with descriptions."}, {"name": "test_get_json_schema_with_pydantic_model", "description": "Tests JSON schema generation for a pydantic model."}, {"name": "test_get_json_schema_with_dataclass", "description": "Tests JSON schema generation for a dataclass."}, {"name": "test_get_json_schema_strict", "description": "Tests JSON schema generation with strict mode (no additional properties)."}, {"name": "test_get_json_schema_with_complex_types", "description": "Tests JSON schema generation for complex types like lists, dicts, and optionals."}, {"name": "test_get_json_schema_with_nested_pydantic_models", "description": "Tests nested JSON schema generation with pydantic models."}, {"name": "test_get_json_schema_with_nested_dataclasses", "description": "Tests nested JSON schema generation with dataclasses."}, {"name": "test_get_json_schema_with_mixed_nested_structures", "description": "Tests nested JSON schema with mixed pydantic models and dataclasses."}], "calls": ["get_json_schema", "get_json_schema_for_arg", "get_json_type_for_py_type", "is_origin_union_type"], "search-terms": ["json schema", "pydantic models", "dataclasses", "nested structures", "unit tests", "schema generation", "type hints", "Union", "Optional"], "state": 2, "file_id": 600, "knowledge_revision": 2837, "git_revision": "95bad1a4af2dab958e8edc19df36108b27f5a77b", "ctags": [], "filename": "libs/agno/tests/unit/utils/test_json_schema.py", "hash": "84188e2b68f02b03d551ab7b24c5d3b3", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2837": "95bad1a4af2dab958e8edc19df36108b27f5a77b"}]}