{"is_source_file": true, "format": "Python", "description": "Unit tests for the Firestore storage component in the agno project, testing CRUD operations, session retrieval, collection management, and error handling.", "external_files": ["agno.storage.firestore", "agno.storage.session.agent", "agno.storage.session.workflow", "google.api_core.exceptions", "pytest"], "external_methods": ["patch", "MagicMock", "deepcopy"], "published": [], "classes": [], "methods": [{"name": "mock_firestore_client", "description": "Fixture to create a mocked Firestore client and collection."}, {"name": "agent_storage", "description": "Fixture to create a FirestoreStorage instance for agent mode with mocked components."}, {"name": "workflow_storage", "description": "Fixture to create a FirestoreStorage instance for workflow mode with mocked components."}, {"name": "test_initialization", "description": "Tests the initialization of FirestoreStorage with various parameters."}, {"name": "test_authentication_error", "description": "Tests handling of authentication errors during Firestore client creation."}, {"name": "test_agent_storage_crud", "description": "Tests CRUD operations for agent sessions in FirestoreStorage."}, {"name": "test_workflow_storage_crud", "description": "Tests CRUD operations for workflow sessions in FirestoreStorage."}, {"name": "test_get_all_sessions", "description": "Tests retrieval of all sessions with optional filters."}, {"name": "test_get_all_session_ids", "description": "Tests retrieval of all session IDs, optionally filtered."}, {"name": "test_get_recent_sessions", "description": "Tests retrieval of recent sessions with optional filters."}, {"name": "test_drop_collection", "description": "Tests dropping all documents in a collection."}, {"name": "test_recursive_deletion", "description": "Tests recursive deletion of documents with subcollections."}, {"name": "test_deepcopy", "description": "Tests deep copying of the storage instance."}, {"name": "test_mode_switching", "description": "Tests switching between different storage modes."}, {"name": "test_error_handling", "description": "Tests error handling in various storage operations."}], "calls": ["agno.storage.firestore.Client", "agno.storage.firestore.FieldFilter", "pytest.raises", "pytest.fixture", "patch", "MagicMock", "deepcopy"], "search-terms": ["FirestoreStorage", "unit tests", "session CRUD", "collection management", "session retrieval", "error handling", "mocked firestore client", "session filtering", "deepcopy storage"], "state": 2, "file_id": 664, "knowledge_revision": 2899, "git_revision": "0d2dba97c2d7048247d09210f89bfd1b0b189058", "ctags": [], "filename": "libs/agno/tests/unit/storage/test_firestore_storage.py", "hash": "fd8472f30ca1130dde328a8ffcf172fa", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2899": "0d2dba97c2d7048247d09210f89bfd1b0b189058"}]}