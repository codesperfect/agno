{"is_source_file": true, "format": "Python", "description": "Unit tests for playground file upload functionality, testing file handling, mock setup, and agent invocation in a FastAPI application.", "external_files": ["agno.agent", "agno.media", "agno.models.openai", "agno.playground", "agno.run.response", "agno.document.reader.pdf_reader", "agno.document.reader.csv_reader", "agno.document.reader.docx_reader", "agno.document.reader.text_reader", "agno.document.reader.json_reader"], "external_methods": ["pytest.fixture", "pytest", "patch", "Mock", "TestClient"], "published": ["test_single_image_upload", "test_multiple_image_upload", "test_pdf_upload_with_knowledge", "test_pdf_upload_without_knowledge", "test_mixed_file_upload", "test_unsupported_file_type", "test_empty_file_upload", "test_document_upload_with_knowledge", "test_document_upload_without_knowledge"], "classes": [], "methods": [{"name": "mock_document_readers", "description": "Fixture that mocks all document readers to avoid actual parsing."}, {"name": "mock_agent", "description": "Fixture that creates a mock agent with knowledge base disabled."}, {"name": "mock_agent_with_knowledge", "description": "Fixture that creates a mock agent with knowledge base enabled."}, {"name": "test_app", "description": "Fixture that creates a TestClient with the playground router using a mock agent."}, {"name": "test_app_with_knowledge", "description": "Fixture that creates a TestClient with the playground router using an agent with knowledge."}, {"name": "mock_image_file", "description": "Fixture that creates a mock image file."}, {"name": "mock_pdf_file", "description": "Fixture that creates a mock PDF file."}, {"name": "mock_csv_file", "description": "Fixture that creates a mock CSV file."}, {"name": "mock_docx_file", "description": "Fixture that creates a mock DOCX file."}, {"name": "mock_text_file", "description": "Fixture that creates a mock text file."}, {"name": "mock_json_file", "description": "Fixture that creates a mock JSON file."}, {"name": "test_single_image_upload", "description": "Test uploading a single image file and verifying agent invocation."}, {"name": "test_multiple_image_upload", "description": "Test uploading multiple image files and verifying agent invocation."}, {"name": "test_pdf_upload_with_knowledge", "description": "Test uploading a PDF with knowledge base enabled, verifying document loading."}, {"name": "test_pdf_upload_without_knowledge", "description": "Test uploading a PDF without knowledge base, expecting FileMedia objects."}, {"name": "test_mixed_file_upload", "description": "Test uploading both image and PDF files together."}, {"name": "test_unsupported_file_type", "description": "Test uploading an unsupported file type, expecting a 400 error."}, {"name": "test_empty_file_upload", "description": "Test uploading an empty file."}, {"name": "test_document_upload_with_knowledge", "description": "Test uploading various document types with knowledge base enabled."}, {"name": "test_document_upload_without_knowledge", "description": "Test uploading various document types without knowledge base, expecting FileMedia objects."}], "search-terms": ["playground file upload", "unit tests", "mock document readers", "agent mock", "file handling", "image upload", "PDF upload", "knowledge base", "file media", "FastAPI test client"], "state": 2, "file_id": 687, "knowledge_revision": 2931, "git_revision": "de4f484df0a97ba767f52dcde416048a0cdfa54e", "ctags": [], "filename": "libs/agno/tests/unit/playground/test_image_support_file_upload.py", "hash": "22c1d528dc81074d6801309d01995deb", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2931": "de4f484df0a97ba767f52dcde416048a0cdfa54e"}]}