{"is_source_file": true, "format": "Python", "description": "This file defines a Python module for an MCP client, including classes for server configuration and client connection management, utilizing asynchronous context management and external libraries for logging, configuration, and network communication.", "external_files": ["agno.tools.mcp", "agno.utils.log", "mcp", "mcp.client.stdio", "pydantic"], "external_methods": ["MCPTools.initialize", "logger.info", "stdio_client", "ClientSession.initialize", "AsyncExitStack.enter_async_context", "AsyncExitStack.aclose"], "published": ["MCPServerConfig", "MCPClient"], "classes": [{"name": "MCPServerConfig", "description": "Configuration data model for MCP server connection parameters."}, {"name": "MCPClient", "description": "Client class to manage connection and communication with an MCP server asynchronously."}], "methods": [{"name": "__init__", "description": "Initializes the MCPClient instance, setting up session and resource management objects."}, {"name": "connect_to_server", "description": "Asynchronously connects to an MCP server using provided configuration, setting up session, logging, and MCP tools."}, {"name": "cleanup", "description": "Asynchronously cleans up resources and closes the connection stack."}], "calls": ["logger.info", "stdio_client", "ClientSession.initialize", "AsyncExitStack.enter_async_context", "AsyncExitStack.aclose", "MCPTools.initialize"], "search-terms": ["MCPClient", "connect_to_server", "AsyncExitStack", "stdio_client", "MCPTools", "mcp", "streamlit_apps"], "state": 2, "file_id": 908, "knowledge_revision": 3170, "git_revision": "e7f97f04bb91b897397a791b190d51ad78caf24c", "ctags": [], "filename": "cookbook/examples/streamlit_apps/mcp_agent/mcp_client.py", "hash": "1f688da01a3a4e8731490a223124e072", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3170": "e7f97f04bb91b897397a791b190d51ad78caf24c"}]}