{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for the Clickhouse database integration within the agno project, including both synchronous and asynchronous test cases, mocking database clients and verifying methods like create, drop, insert, search, and existence checks.", "external_files": ["clickhouse_connect.get_client", "clickhouse_connect.get_async_client", "agno.document.Document", "agno.vectordb.clickhouse"], "external_methods": ["clickhouse_connect.get_client", "clickhouse_connect.get_async_client"], "published": [], "classes": [], "methods": [{"name": "mock_client", "description": "Fixture to create a mock Clickhouse client."}, {"name": "mock_async_client", "description": "Fixture to create a mock asynchronous Clickhouse client."}, {"name": "mock_clickhouse", "description": "Fixture to create a Clickhouse instance with mocked dependencies."}, {"name": "create_test_documents", "description": "Helper function to generate test Document instances."}, {"name": "test_initialization", "description": "Test the initialization of the Clickhouse object."}, {"name": "test_table_exists", "description": "Test the table_exists method for both existing and non-existing tables."}, {"name": "test_create", "description": "Test the create method for creating a table."}, {"name": "test_doc_exists", "description": "Test the doc_exists method for existing and non-existing documents."}, {"name": "test_name_exists", "description": "Test the name_exists method for existing and non-existing names."}, {"name": "test_id_exists", "description": "Test the id_exists method for existing and non-existing IDs."}, {"name": "test_insert", "description": "Test the insert method with mocked embedder and client."}, {"name": "test_upsert", "description": "Test the upsert method which calls insert and query."}, {"name": "test_search", "description": "Test the search method for retrieving documents based on a query."}, {"name": "test_drop", "description": "Test the drop method for dropping the table."}, {"name": "test_exists", "description": "Test the exists method for table existence."}, {"name": "test_get_count", "description": "Test the get_count method for counting documents."}, {"name": "test_delete", "description": "Test the delete method for deleting the table."}, {"name": "test_optimize", "description": "Test the optimize method (no specific logic)."}, {"name": "test_ensure_async_client", "description": "Async test for ensuring the async client is set."}, {"name": "test_async_table_exists", "description": "Async test for checking if table exists."}, {"name": "test_async_create", "description": "Async test for creating a table."}, {"name": "test_async_doc_exists", "description": "Async test for document existence."}, {"name": "test_async_name_exists", "description": "Async test for name existence."}, {"name": "test_async_insert", "description": "Async test for inserting documents."}, {"name": "test_async_upsert", "description": "Async test for upserting documents."}, {"name": "test_async_search", "description": "Async test for searching documents."}, {"name": "test_async_drop", "description": "Async test for dropping the table."}, {"name": "test_async_exists", "description": "Async test for table existence check."}], "calls": ["clickhouse_connect.get_client", "clickhouse_connect.get_async_client", "mock_clickhouse.table_exists", "mock_clickhouse.create", "mock_clickhouse.doc_exists", "mock_clickhouse.name_exists", "mock_clickhouse.id_exists", "mock_clickhouse.insert", "mock_clickhouse.upsert", "mock_clickhouse.search", "mock_clickhouse.drop", "mock_clickhouse.exists", "mock_clickhouse.get_count", "mock_clickhouse.delete", "mock_clickhouse.optimize", "mock_clickhouse._ensure_async_client", "mock_clickhouse.async_table_exists", "mock_clickhouse.async_create", "mock_clickhouse.async_doc_exists", "mock_clickhouse.async_name_exists", "mock_clickhouse.async_insert", "mock_clickhouse.async_upsert", "mock_clickhouse.async_search", "mock_clickhouse.async_drop", "mock_clickhouse.async_exists"], "search-terms": ["unit tests", "clickhouse", "async", "test_clickhousedb", "vector database", "mocked database client", "test documents", "pytest"], "state": 2, "file_id": 678, "knowledge_revision": 2949, "git_revision": "c80307fba9ddd44bef28a3cbc179b3237720de15", "ctags": [], "filename": "libs/agno/tests/unit/vectordb/test_clickhousedb.py", "hash": "7c89721d6b0b36619d2adb9b48d250ad", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2949": "c80307fba9ddd44bef28a3cbc179b3237720de15"}]}