{"is_source_file": true, "format": "Python", "description": "This file implements a Firestore-backed in-memory database class, providing methods for creating, reading, updating, deleting, and managing memory records stored in Google Firestore. It includes error handling for Firestore connection issues and manages user-specific collections for memory storage.", "external_files": ["agno.memory.v2.db.base", "agno.memory.v2.db.schema", "agno.utils.log", "google.api_core.exceptions", "google.cloud.firestore_v1"], "external_methods": ["log_debug", "logger.error", "list", "os.getenv", "datetime.now", "datetime.fromtimestamp"], "published": ["FirestoreMemoryDb"], "classes": [{"name": "FirestoreMemoryDb", "description": "A class providing a Firestore-backed implementation of a memory database, supporting CRUD operations and collection management."}], "methods": [{"name": "__init__", "description": "Initializes the FirestoreMemoryDb with optional parameters for collection name, database name, client, and project ID."}, {"name": "_initialize_client", "description": "Creates and returns a Firestore client with error handling for authentication and connection issues."}, {"name": "get_user_collection", "description": "Returns a user-specific collection reference for storing memories."}, {"name": "_delete_document", "description": "Recursively deletes a document and its subcollections."}, {"name": "_delete_collection", "description": "Recursively deletes all documents in a collection."}, {"name": "create", "description": "Creates the collection index; in Firestore, this is a no-op that tests the connection."}, {"name": "memory_exists", "description": "Checks if a memory exists in the collection based on its ID and user ID."}, {"name": "read_memories", "description": "Reads memories for a specified user, with optional limit and sort order."}, {"name": "upsert_memory", "description": "Inserts or updates a memory record in the user-specific collection, using transactions for atomicity."}, {"name": "delete_memory", "description": "Deletes a memory record by ID from the user-specific collection."}, {"name": "clear", "description": "Deletes all documents in the collection."}, {"name": "drop_table", "description": "Drops the entire collection by deleting all documents."}, {"name": "table_exists", "description": "Checks if the collection exists by attempting to stream documents."}], "calls": ["list(client.collections())", "log_debug", "logger.error", "self._client.collection", "self._client.transaction", "transaction.set", "list(self.collection.list_documents())", "self._client.collection", "self._client.collection", "self._client.collection"], "search-terms": ["FirestoreMemoryDb", "firestore", "Google Cloud", "memory store", "collection reference", "transactional", "MemoryRow", "MemoryDb", "user-specific collection"], "state": 2, "file_id": 113, "knowledge_revision": 2365, "git_revision": "0d2dba97c2d7048247d09210f89bfd1b0b189058", "ctags": [], "filename": "libs/agno/agno/memory/v2/db/firestore.py", "hash": "9ac220fd98459fac365eba9ee0e4cbae", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2365": "0d2dba97c2d7048247d09210f89bfd1b0b189058"}]}