{"is_source_file": true, "format": "Python", "description": "This file defines the DbInstance class, a subclass of AwsResource, representing an RDS database instance in AWS. It includes methods for creating, reading, updating, and deleting RDS instances, as well as retrieving endpoints and ports. The class manages various configuration parameters for RDS instances, including security groups, subnet groups, credentials, and other settings.", "external_files": ["agno.aws.api_client", "agno.aws.resource.base", "agno.aws.resource.cloudformation.stack", "agno.aws.resource.ec2.security_group", "agno.aws.resource.rds.db_subnet_group", "agno.aws.resource.secret.manager", "agno.cli.console", "agno.utils.log"], "external_methods": ["agno.aws.api_client.AwsApiClient", "agno.aws.resource.base.AwsResource.get_service_client", "agno.aws.resource.base.AwsResource.get_resource_type", "agno.aws.resource.base.AwsResource.get_resource_name", "agno.aws.resource.base.AwsResource.get_aws_client", "agno.aws.resource.base.AwsResource.read_resource_from_file", "agno.aws.resource.cloudformation.stack.CloudFormationStack.get_security_group", "agno.aws.resource.ec2.security_group.SecurityGroup.get_security_group_id", "agno.aws.resource.rds.db_subnet_group.DbSubnetGroup.name", "agno.aws.resource.secret.manager.SecretsManager.get_secret_value", "agno.cli.console.print_info", "agno.utils.log.logger", "botocore.exceptions.ClientError"], "published": ["DbInstance"], "classes": [{"name": "DbInstance", "description": "Represents an AWS RDS database instance, providing methods to create, read, update, delete, and retrieve connection details. It manages configuration parameters such as security groups, subnet groups, credentials, and other instance settings."}], "methods": [{"name": "get_db_instance_identifier", "description": "Returns the identifier of the DB instance, defaulting to the name if not explicitly set."}, {"name": "get_master_username", "description": "Retrieves the master username, optionally reading from secrets file or AWS Secrets Manager."}, {"name": "get_master_user_password", "description": "Retrieves the master user password, optionally reading from secrets file or AWS Secrets Manager."}, {"name": "get_db_name", "description": "Retrieves the database name, checking secrets file and AWS Secrets Manager if not set."}, {"name": "get_database_name", "description": "Alias for get_db_name, used for compatibility with cluster naming conventions."}, {"name": "_create", "description": "Creates an RDS DB instance using AWS SDK, configuring parameters like security groups, subnet groups, credentials, and other settings."}, {"name": "post_create", "description": "Waits for the DB instance to become available after creation."}, {"name": "_read", "description": "Reads the current state of the DB instance from AWS."}, {"name": "_delete", "description": "Deletes the DB instance from AWS, optionally skipping final snapshot."}, {"name": "post_delete", "description": "Waits for the DB instance to be fully deleted."}, {"name": "_update", "description": "Updates the configuration of an existing DB instance."}, {"name": "get_db_endpoint", "description": "Retrieves the endpoint address of the DB instance."}, {"name": "get_db_port", "description": "Retrieves the port number of the DB instance."}], "calls": ["agno.aws.resource.base.AwsResource.get_service_client", "agno.aws.resource.base.AwsResource.get_resource_type", "agno.aws.resource.base.AwsResource.get_resource_name", "agno.aws.resource.base.AwsResource.get_aws_client", "agno.aws.resource.base.AwsResource.read_resource_from_file", "agno.aws.resource.cloudformation.stack.CloudFormationStack.get_security_group", "agno.aws.resource.ec2.security_group.SecurityGroup.get_security_group_id", "agno.aws.resource.rds.db_subnet_group.DbSubnetGroup.name", "agno.aws.resource.secret.manager.SecretsManager.get_secret_value", "agno.cli.console.print_info", "logger.debug", "logger.error", "logger.info", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error", "logger.debug", "logger.error"], "search-terms": ["RDS", "DBInstance", "AWS RDS", "database configuration", "create_db_instance", "read_db_instance", "update_db_instance", "delete_db_instance", "endpoint", "port", "secrets management", "security groups", "subnet groups", "AWS SDK", "boto3", "Aurora", "database parameters"], "state": 2, "file_id": 46, "knowledge_revision": 2362, "git_revision": "e67ee577664da81d64486d0682baa2083ae8659b", "ctags": [], "filename": "libs/infra/agno_aws/agno/aws/resource/rds/db_instance.py", "hash": "3303545cf65c9c73350eca374b9f23d8", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2362": "e67ee577664da81d64486d0682baa2083ae8659b"}]}