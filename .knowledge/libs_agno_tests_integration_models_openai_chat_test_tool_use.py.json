{"is_source_file": true, "format": "Python", "description": "Test suite for the 'agent' module in the 'agno' package, focusing on integration tests for tool usage, streaming responses, structured outputs, and multiple tool calls.", "external_files": ["pytest", "pydantic", "agno.agent", "agno.models.openai", "agno.tools.duckduckgo", "agno.tools.exa", "agno.tools.yfinance"], "external_methods": ["pytest.mark.asyncio", "pytest.mark.parametrize", "agent.run", "agent.arun", "BaseModel", "Field"], "published": [], "classes": [{"name": "StockPrice", "description": "A Pydantic model representing stock price data with 'price' and 'currency' fields."}], "methods": [{"name": "test_tool_use", "description": "Tests basic tool invocation and response content for a simple query."}, {"name": "test_tool_use_stream", "description": "Tests streaming responses and detection of tool call events."}, {"name": "test_async_tool_use", "description": "Asynchronous test for tool invocation."}, {"name": "test_async_tool_use_stream", "description": "Asynchronous streaming test for tool invocation and content verification."}, {"name": "test_tool_use_with_native_structured_outputs", "description": "Tests structured output with a custom Pydantic model."}, {"name": "test_parallel_tool_calls", "description": "Verifies multiple tool calls within a single response."}, {"name": "test_multiple_tool_calls", "description": "Verifies multiple different tools invoked in a single query."}, {"name": "test_tool_call_custom_tool_no_parameters", "description": "Tests a custom tool function with no parameters."}, {"name": "test_tool_call_custom_tool_untyped_parameters", "description": "Tests a custom tool function with untyped parameters."}, {"name": "test_tool_call_custom_tool_optional_parameters", "description": "Tests a custom tool function with optional parameters, parameterized over different models."}, {"name": "test_tool_call_list_parameters", "description": "Tests a tool that handles list parameters, verifying multiple URLs."}], "calls": ["agno.agent.Agent", "agno.agent.RunResponse", "agno.models.openai.OpenAIChat", "agno.tools.duckduckgo.DuckDuckGoTools", "agno.tools.exa.ExaTools", "agno.tools.yfinance.YFinanceTools"], "search-terms": ["integration tests", "tool invocation", "streaming responses", "structured output", "multiple tool calls", "custom tools", "pytest asyncio", "agent run", "agent arun"], "state": 2, "file_id": 786, "knowledge_revision": 3027, "git_revision": "777260577abc1ec1fbdfa141f65351510b5775ee", "ctags": [], "filename": "libs/agno/tests/integration/models/openai/chat/test_tool_use.py", "hash": "1ba56060e3a71eecc76650aa8253d7af", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3027": "777260577abc1ec1fbdfa141f65351510b5775ee"}]}