{"is_source_file": true, "format": "Python", "description": "This file defines classes and functions for integrating MCP (Model Context Protocol) servers with the Agno framework, including handling different connection protocols (stdio, sse, streamable-http), managing sessions, and registering tools for use within the system.", "external_files": ["agno.tools", "agno.tools.function", "agno.utils.log", "agno.utils.mcp", "mcp", "mcp.client.sse", "mcp.client.stdio", "mcp.client.streamable_http"], "external_methods": ["agno.tools.Toolkit", "agno.tools.function.Function", "agno.utils.log.log_debug", "agno.utils.log.log_warning", "agno.utils.log.logger", "agno.utils.mcp.get_entrypoint_for_tool", "mcp.ClientSession", "mcp.StdioServerParameters", "mcp.client.sse.sse_client", "mcp.client.stdio.get_default_environment", "mcp.client.stdio.stdio_client", "mcp.client.streamable_http.streamablehttp_client"], "published": ["MCPTools", "MultiMCPTools"], "classes": [{"name": "SSEClientParams", "description": "Data class representing parameters for an SSE client connection, including URL, headers, and timeouts."}, {"name": "StreamableHTTPClientParams", "description": "Data class representing parameters for a Streamable HTTP client connection, including URL, headers, timeouts, and termination flag."}, {"name": "MCPTools", "description": "A toolkit class for managing a connection to an MCP server, handling tool registration, and session management."}, {"name": "MultiMCPTools", "description": "A toolkit class for managing multiple MCP server connections, supporting various protocols and session handling."}], "methods": [{"name": "__init__", "description": "Constructor for MCPTools, initializes connection parameters and validates inputs."}, {"name": "__aenter__", "description": "Asynchronous context manager entry, sets up connections and sessions based on transport protocol."}, {"name": "__aexit__", "description": "Asynchronous context manager exit, cleans up sessions and connections."}, {"name": "initialize", "description": "Initializes the MCP session by retrieving and registering available tools."}, {"name": "__init__", "description": "Constructor for MultiMCPTools, manages multiple server configurations and connection parameters."}, {"name": "__aenter__", "description": "Enters the async context, establishing sessions for all configured servers."}, {"name": "__aexit__", "description": "Exits the async context, closing all sessions and cleaning up."}, {"name": "initialize", "description": "Initializes a given MCP session by retrieving and registering tools."}], "calls": ["agno.tools.Toolkit", "agno.tools.function.Function", "agno.utils.log.log_debug", "agno.utils.log.log_warning", "agno.utils.log.logger", "agno.utils.mcp.get_entrypoint_for_tool", "mcp.ClientSession", "mcp.StdioServerParameters", "mcp.client.sse.sse_client", "mcp.client.stdio.get_default_environment", "mcp.client.stdio.stdio_client", "mcp.client.streamable_http.streamablehttp_client"], "search-terms": ["MCP server integration", "Agno MCP toolkit", "async context manager", "session management", "tool registration", "stdio connection", "sse connection", "streamable-http connection", "multi-server MCP", "connection parameters"], "state": 2, "file_id": 466, "knowledge_revision": 2732, "git_revision": "e9d640f53cf3d31e832d06e920c937bf2a365193", "ctags": [], "filename": "libs/agno/agno/tools/mcp.py", "hash": "acf7d340a835942c6de6739228fcc484", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2732": "e9d640f53cf3d31e832d06e920c937bf2a365193"}]}