{"is_source_file": true, "format": "Python", "description": "This Python script demonstrates how to use agentic context within a team setup to improve performance, involving agents for stock and web searching, and managing team context and interactions.", "external_files": ["agno.agent", "agno.memory.v2.memory", "agno.models.google.gemini", "agno.models.openai", "agno.storage.agent.sqlite", "agno.team.team", "agno.tools.duckduckgo", "agno.tools.yfinance"], "external_methods": ["Memory", "Agent", "Team", "OpenAIChat", "SqliteAgentStorage", "YFinanceTools", "DuckDuckGoTools"], "published": ["team", "session_id"], "classes": [{"name": "Memory", "description": "Memory object managing team and agent context."}, {"name": "Agent", "description": "Represents an agent with specific tools, model, and storage."}, {"name": "Team", "description": "Represents a team of agents with shared context and instructions."}, {"name": "OpenAIChat", "description": "Model wrapper for OpenAI's chat models."}, {"name": "SqliteAgentStorage", "description": "Storage backend for agent sessions using SQLite."}, {"name": "YFinanceTools", "description": "Tools for stock data retrieval."}, {"name": "DuckDuckGoTools", "description": "Tools for web search via DuckDuckGo."}], "methods": [{"name": "print_response", "description": "Method to output the response from the team, with streaming options."}], "calls": ["team.print_response", "print"], "search-terms": ["agentic context", "team setup", "stock and web search agents", "shared team context", "team interactions"], "state": 2, "file_id": 1061, "knowledge_revision": 3300, "git_revision": "20598194e3b3de638d996bb8aca3530fc73f38b6", "ctags": [], "filename": "cookbook/teams/memory/04_agentic_context.py", "hash": "149364b1a445e9c43dcdcdf0f13a1173", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3300": "20598194e3b3de638d996bb8aca3530fc73f38b6"}]}