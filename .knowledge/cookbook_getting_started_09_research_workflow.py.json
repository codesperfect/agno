{"is_source_file": true, "format": "Python", "description": "This file defines a complex workflow for an AI research assistant, including classes for modeling articles and search results, and a main class 'ResearchReportGenerator' that orchestrates web search, content scraping, and report generation. It includes methods for caching, running the workflow, and generating detailed research reports.", "external_files": ["agno.agent", "agno.models.openai", "agno.run.workflow", "agno.storage.sqlite", "agno.tools.duckduckgo", "agno.tools.newspaper4k", "agno.utils.log", "agno.utils.pprint", "agno.workflow", "pydantic"], "external_methods": ["Agent", "OpenAIChat", "WorkflowCompletedEvent", "SqliteStorage", "DuckDuckGoTools", "Newspaper4kTools", "logger.info", "logger.warning", "logger.error", "pprint_run_response", "Workflow.run", "Workflow.write_to_storage", "Workflow.get_cached_report", "Workflow.add_report_to_cache", "Workflow.get_cached_search_results", "Workflow.add_search_results_to_cache", "Workflow.get_cached_scraped_articles", "Workflow.add_scraped_articles_to_cache", "Workflow.scrape_articles", "Workflow.write_research_report"], "published": ["Article", "SearchResults", "ScrapedArticle", "ResearchReportGenerator"], "classes": [{"name": "Article", "description": "Data model representing a news or research article with title, URL, optional summary, and content."}, {"name": "SearchResults", "description": "Data model encapsulating a list of articles resulting from a web search."}, {"name": "ScrapedArticle", "description": "Data model representing detailed content extracted from an article, including title, URL, optional summary, and markdown content."}, {"name": "ResearchReportGenerator", "description": "Main workflow class orchestrating web search, content scraping, caching, and report generation for research topics."}], "methods": [{"name": "run", "description": "Main method to generate a research report on a given topic, orchestrating search, scraping, and report synthesis."}, {"name": "get_cached_report", "description": "Retrieve a cached report for a specific topic if available."}, {"name": "add_report_to_cache", "description": "Cache a generated report for a specific topic."}, {"name": "get_cached_search_results", "description": "Retrieve cached search results for a topic."}, {"name": "add_search_results_to_cache", "description": "Cache search results for a topic."}, {"name": "get_cached_scraped_articles", "description": "Retrieve cached scraped articles for a topic."}, {"name": "add_scraped_articles_to_cache", "description": "Cache scraped articles for a topic."}, {"name": "get_search_results", "description": "Perform or retrieve cached web search results for a topic, with retries."}, {"name": "scrape_articles", "description": "Scrape content from articles, using cache if enabled."}, {"name": "write_research_report", "description": "Generate and cache a detailed research report based on scraped articles."}], "calls": ["logger.info", "logger.warning", "logger.error", "self.get_cached_report", "self.get_search_results", "self.scrape_articles", "self.write_research_report", "self.add_report_to_cache", "self.get_cached_search_results", "self.add_search_results_to_cache", "self.get_cached_scraped_articles", "self.add_scraped_articles_to_cache", "self.writer.run", "self.write_to_storage"], "search-terms": ["ResearchReportGenerator", "web_searcher", "article_scraper", "content extraction", "academic report generation", "caching", "web search", "content scraping", "research workflow"], "state": 2, "file_id": 1098, "knowledge_revision": 3468, "git_revision": "c4cabc851178c113c4f14aa2047e2d99383e83c5", "ctags": [], "filename": "cookbook/getting_started/09_research_workflow.py", "hash": "0219e747ca1ce29359e8afdf68e63c12", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3468": "c4cabc851178c113c4f14aa2047e2d99383e83c5"}]}