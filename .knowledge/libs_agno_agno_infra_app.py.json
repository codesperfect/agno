{"is_source_file": true, "format": "Python", "description": "This file defines the InfraApp class, a subclass of InfraBase, which models an infrastructure application configuration with properties for container images, ports, dependencies, and resource management. It includes methods for resource building, dependency retrieval, and filtering logic within an infrastructure management context.", "external_files": ["agno.infra.base", "agno.infra.context", "agno.infra.resource", "agno.utils.log"], "external_methods": ["logger.debug", "self.model_dump", "self.get_group_name", "self.get_app_name", "self.workspace_settings", "InfraResource.model_dump", "InfraResource.set_workspace_settings"], "published": ["InfraApp"], "classes": [{"name": "InfraApp", "description": "A base class for infrastructure applications, encapsulating configuration properties and methods for resource management, dependencies, and filtering within an infrastructure provisioning system."}], "methods": [{"name": "set_container_port", "description": "Validator method to set the container port based on port_number if not explicitly provided."}, {"name": "set_host_port", "description": "Validator method to set the host port based on port_number if not explicitly provided."}, {"name": "get_app_name", "description": "Returns the name of the application."}, {"name": "get_image_str", "description": "Constructs and returns the image string based on available image properties."}, {"name": "build_resources", "description": "Placeholder method for building resources; logs a debug message and returns None."}, {"name": "get_dependencies", "description": "Returns a list of InfraResource dependencies if any are set."}, {"name": "add_app_properties_to_resources", "description": "Augments a list of resources with application-level properties, applying defaults and dependencies."}, {"name": "get_resources", "description": "Returns the cached resources or builds and caches the resources list."}, {"name": "matches_filters", "description": "Checks if the application matches a given group filter."}, {"name": "should_create", "description": "Determines if the app should be created based on enabled status, skip flags, and filters."}, {"name": "should_delete", "description": "Determines if the app should be deleted based on enabled status, skip flags, and filters."}, {"name": "should_update", "description": "Determines if the app should be updated based on enabled status, skip flags, and filters."}], "calls": ["logger.debug", "self.model_dump", "self.get_group_name", "self.get_app_name", "InfraResource.model_dump", "InfraResource.set_workspace_settings"], "search-terms": ["InfraApp", "resource management", "container image configuration", "port configuration", "dependency handling", "filtering logic"], "state": 2, "file_id": 163, "knowledge_revision": 2425, "git_revision": "e67ee577664da81d64486d0682baa2083ae8659b", "ctags": [], "filename": "libs/agno/agno/infra/app.py", "hash": "75b02c08043533cf3f864b48c52924af", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2425": "e67ee577664da81d64486d0682baa2083ae8659b"}]}