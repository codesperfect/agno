{"is_source_file": true, "format": "Python", "description": "Unit tests for RedisMemoryDb class, mocking Redis interactions to verify database operations such as create, read, update, delete, and error handling.", "external_files": ["agno.memory.v2.db.redis", "agno.memory.v2.db.schema"], "external_methods": ["redis.Redis", "pytest.fixture", "pytest.raises", "patch", "MagicMock", "ANY"], "published": [], "classes": [{"name": "RedisMemoryDb", "description": "A class representing Redis-based in-memory database operations, including create, read, update, delete, and table management."}, {"name": "MemoryRow", "description": "A data schema class representing a memory record with id, user_id, and memory content."}], "methods": [{"name": "mock_redis_client", "description": "Fixture that creates a mocked Redis client with in-memory storage for testing."}, {"name": "memory_db", "description": "Fixture that initializes RedisMemoryDb with the mocked Redis client."}, {"name": "test_create_connection", "description": "Test that Redis connection is successfully established by calling create() and ping."}, {"name": "test_connection_error", "description": "Test that create() raises a ConnectionError when Redis ping fails."}, {"name": "test_memory_exists", "description": "Test the memory_exists method for existing and non-existing memory entries."}, {"name": "test_upsert_memory", "description": "Test the upsert_memory method for inserting or updating a memory record."}, {"name": "test_read_memories", "description": "Test reading multiple memories with filtering, limits, and sorting."}, {"name": "test_delete_memory", "description": "Test deleting a memory record and handling deletion of non-existent records."}, {"name": "test_drop_table", "description": "Test dropping all memory entries with a specific prefix."}, {"name": "test_table_exists", "description": "Test checking if the memory table exists based on presence of keys."}, {"name": "test_clear", "description": "Test clearing all memory entries from the table."}, {"name": "test_error_handling", "description": "Test error handling in various methods when Redis operations raise exceptions."}], "calls": ["agno.memory.v2.db.redis.Redis", "mock_redis_client.get", "mock_redis_client.set", "mock_redis_client.exists", "mock_redis_client.delete", "mock_redis_client.ping", "mock_redis_client.scan_iter", "MemoryRow.__init__", "RedisMemoryDb.create", "RedisMemoryDb.memory_exists", "RedisMemoryDb.upsert_memory", "RedisMemoryDb.read_memories", "RedisMemoryDb.delete_memory", "RedisMemoryDb.drop_table", "RedisMemoryDb.table_exists", "RedisMemoryDb.clear"], "search-terms": ["RedisMemoryDb", "unit tests", "mock Redis", "memory database", "Redis interactions", "test_memory_redis", "pytest", "MemoryRow schema"], "state": 2, "file_id": 597, "knowledge_revision": 2827, "git_revision": "9aba9609f2bd8254a688c35239f4c984135b5723", "ctags": [], "filename": "libs/agno/tests/unit/memory/test_memory_redis.py", "hash": "59e7aba1dcfea0dbbde3eb44cbe91205", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2827": "9aba9609f2bd8254a688c35239f4c984135b5723"}]}