{"is_source_file": true, "format": "Python", "description": "Unit tests for the get_function_call utility function, testing various scenarios including argument parsing, error handling, and function lookup.", "external_files": ["agno.tools.function", "agno.utils.functions"], "external_methods": ["agno.utils.functions.get_function_call"], "published": [], "classes": [{"name": "Function", "description": "Represents a function with name, description, and parameters."}, {"name": "FunctionCall", "description": "Represents a function call with associated function, arguments, call ID, and error info."}], "methods": [{"name": "sample_functions", "description": "Fixture that provides sample Function objects for testing."}, {"name": "test_get_function_call_basic", "description": "Tests creation of a basic function call with valid arguments."}, {"name": "test_get_function_call_invalid_name", "description": "Tests behavior when a non-existent function name is used."}, {"name": "test_get_function_call_no_functions", "description": "Tests behavior when no functions dictionary is provided."}, {"name": "test_get_function_call_invalid_json", "description": "Tests handling of invalid JSON arguments."}, {"name": "test_get_function_call_non_dict_arguments", "description": "Tests handling of arguments that are not JSON objects."}, {"name": "test_get_function_call_argument", "description": "Tests argument sanitization, including handling of boolean and null string values."}, {"name": "test_get_function_call_argument_advanced", "description": "Tests passing arguments without sanitization, including nested code string."}, {"name": "test_get_function_call_empty_arguments", "description": "Tests behavior with empty string arguments."}, {"name": "test_get_function_call_no_arguments", "description": "Tests behavior when no arguments are provided."}], "calls": ["agno.utils.functions.get_function_call"], "search-terms": ["unit test", "get_function_call", "Function", "FunctionCall", "pytest", "arguments parsing", "function call creation", "error handling"], "state": 2, "file_id": 601, "knowledge_revision": 2825, "git_revision": "95bad1a4af2dab958e8edc19df36108b27f5a77b", "ctags": [], "filename": "libs/agno/tests/unit/utils/test_functions.py", "hash": "414277a8e73f420e86b0f265be7a3807", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2825": "95bad1a4af2dab958e8edc19df36108b27f5a77b"}]}