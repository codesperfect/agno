{"is_source_file": true, "format": "Python", "description": "This file defines an asynchronous workflow class 'AsyncHackerNewsReporter' that fetches top stories from Hacker News, processes each story into a report, and outputs the combined report. It includes methods for retrieving top stories asynchronously, and orchestrates the workflow with agents and tools for content extraction and report generation.", "external_files": ["agno.agent", "agno.run.workflow", "agno.tools.newspaper4k", "agno.utils.log", "agno.utils.pprint", "agno.workflow", "httpx"], "external_methods": ["httpx.AsyncClient", "logger.info", "logger.error", "asyncio.run", "asyncio.gather", "json.dumps", "pprint_run_response"], "published": ["AsyncHackerNewsReporter"], "classes": [{"name": "AsyncHackerNewsReporter", "description": "An asynchronous workflow class that fetches top Hacker News stories, generates detailed reports for each, and streams the combined report."}], "methods": [{"name": "get_top_hackernews_stories", "description": "Fetches the top stories from Hacker News asynchronously, returning a JSON string of story details."}, {"name": "arun", "description": "Orchestrates the process: retrieves top stories, generates reports for each, and streams the final combined report."}], "calls": ["httpx.AsyncClient", "client.get", "response.json", "asyncio.gather", "logger.info", "logger.error", "self.hn_agent.arun", "self.writer.arun", "asyncio.run"], "search-terms": ["AsyncHackerNewsReporter", "get_top_hackernews_stories", "Hacker News", "asyncio", "report generation", "top stories"], "state": 2, "file_id": 1580, "knowledge_revision": 3839, "git_revision": "c4cabc851178c113c4f14aa2047e2d99383e83c5", "ctags": [], "filename": "cookbook/workflows/async_hackernews_reporter.py", "hash": "892584025120fb0a8c759fcdc47d6b4b", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"3839": "c4cabc851178c113c4f14aa2047e2d99383e83c5"}]}