{"is_source_file": true, "format": "Python", "description": "Unit tests for the DocxReader class in the agno.document.reader.docx_reader module, testing reading DOCX files synchronously and asynchronously, with chunking, from BytesIO, handling invalid files, and metadata extraction.", "external_files": ["pathlib", "io", "unittest.mock", "pytest", "agno.document.base", "agno.document.reader.docx_reader"], "external_methods": ["pathlib.Path.exists", "agno.document.reader.docx_reader.DocxDocument", "pytest.fixture", "pytest.mark.asyncio", "patch", "Mock", "patch", "asyncio.gather"], "published": ["test_docx_reader_read_file", "test_docx_reader_async_read_file", "test_docx_reader_with_chunking", "test_docx_reader_bytesio", "test_docx_reader_invalid_file", "test_docx_reader_file_error", "test_async_docx_processing", "test_docx_reader_async_with_chunking", "test_docx_reader_metadata"], "classes": [{"name": "Document", "description": "Represents a document with name, id, and content, used in chunked document testing."}], "methods": [{"name": "mock_docx", "description": "Fixture that creates a mock DOCX document with paragraphs for testing."}], "calls": ["pathlib.Path.exists", "agno.document.reader.docx_reader.DocxDocument", "pytest.fixture", "pytest.mark.asyncio", "patch", "Mock", "asyncio.gather"], "search-terms": ["test_docx_reader", "unit test", "DocxReader", "DOCX", "pytest", "asyncio", "chunking", "mock", "BytesIO"], "state": 2, "file_id": 614, "knowledge_revision": 2821, "git_revision": "de4f484df0a97ba767f52dcde416048a0cdfa54e", "ctags": [], "filename": "libs/agno/tests/unit/reader/test_docx_reader.py", "hash": "bb3b810fae2cf235b85579d1970e651d", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2821": "de4f484df0a97ba767f52dcde416048a0cdfa54e"}]}