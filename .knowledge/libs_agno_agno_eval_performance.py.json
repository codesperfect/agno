{"is_source_file": true, "format": "Python", "description": "This file defines classes and methods for evaluating the performance of functions, including runtime and memory usage metrics, with support for synchronous and asynchronous functions. It includes data structures for storing results, methods for measuring performance, and utilities for logging and saving results.", "external_files": ["agno.api.schemas.evals", "agno.eval.utils", "agno.utils.log", "agno.utils.timer", "rich.console", "rich.table"], "external_methods": ["agno.eval.utils.async_log_eval_run", "agno.eval.utils.log_eval_run", "agno.eval.utils.store_result_in_file", "logger.debug", "Timer.start", "Timer.stop", "statistics.mean", "statistics.stdev", "statistics.median", "statistics.quantiles", "asyncio.iscoroutinefunction"], "published": ["PerformanceResult", "PerformanceEval"], "classes": [{"name": "PerformanceResult", "description": "Stores runtime and memory usage statistics, computes statistical metrics, and provides methods to print summaries and detailed results."}, {"name": "PerformanceEval", "description": "Evaluates the performance of a given function by measuring execution time and peak memory usage, supporting both sync and async functions, with options for warm-up runs, debugging, and logging."}], "methods": [{"name": "compute_stats", "description": "Calculates statistical metrics (mean, min, max, std dev, median, 95th percentile) for runtime and memory usage data."}, {"name": "print_summary", "description": "Prints a summary table of performance metrics using rich library."}, {"name": "print_results", "description": "Prints individual run results in a tabular format."}, {"name": "_measure_time", "description": "Measures execution time of the function synchronously."}, {"name": "_async_measure_time", "description": "Asynchronously measures execution time of the function."}, {"name": "_measure_memory", "description": "Measures peak memory usage synchronously using tracemalloc, adjusted by baseline."}, {"name": "_async_measure_memory", "description": "Asynchronously measures peak memory usage using tracemalloc, adjusted by baseline."}, {"name": "_parse_eval_run_data", "description": "Prepares performance data for logging or monitoring."}, {"name": "_compute_tracemalloc_baseline", "description": "Establishes a baseline memory usage by running tracemalloc with an empty function multiple times."}, {"name": "run", "description": "Runs performance evaluation synchronously, including warm-up, measurement, result collection, and optional logging and printing."}, {"name": "arun", "description": "Runs performance evaluation asynchronously, supporting async functions with similar steps as run()."}], "calls": ["agno.eval.utils.store_result_in_file", "agno.eval.utils.log_eval_run", "agno.eval.utils.async_log_eval_run", "logger.debug", "Timer.start", "Timer.stop", "statistics.mean", "statistics.stdev", "statistics.median", "statistics.quantiles", "asyncio.iscoroutinefunction"], "search-terms": ["PerformanceEval", "performance measurement", "async performance", "memory profiling", "runtime statistics", "performance benchmarking"], "state": 2, "file_id": 511, "knowledge_revision": 2764, "git_revision": "d6716051724ecb7c953f42489a90bff8a4e31caa", "ctags": [], "filename": "libs/agno/agno/eval/performance.py", "hash": "5a4338cdaf818b0005dcb84f9e78d22f", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2764": "d6716051724ecb7c953f42489a90bff8a4e31caa"}]}