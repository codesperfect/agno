{"is_source_file": true, "format": "Python", "description": "This file defines data models for media artifacts such as videos, images, audio, and files, using Pydantic for validation and serialization. It includes classes for different media types with methods for converting to dictionaries, validation, and external resource fetching.", "external_files": ["pathlib", "typing", "pydantic"], "external_methods": ["httpx.get", "base64.b64decode", "zlib.decompress"], "published": ["Media", "VideoArtifact", "ImageArtifact", "AudioArtifact", "Video", "Audio", "AudioResponse", "Image", "File"], "classes": [{"name": "Media", "description": "Base class for media items with common identifiers and prompts."}, {"name": "VideoArtifact", "description": "Represents a video media artifact with URL, content, and metadata."}, {"name": "ImageArtifact", "description": "Represents an image media artifact with URL, content, and metadata."}, {"name": "AudioArtifact", "description": "Represents an audio media artifact with URL, base64 content, and metadata."}, {"name": "Video", "description": "Model for video data with validation for source fields and encoding."}, {"name": "Audio", "description": "Model for audio data with validation and external resource fetching."}, {"name": "AudioResponse", "description": "Model for audio response data including content, transcript, and metadata."}, {"name": "Image", "description": "Model for image data with validation, external resource fetching, and encoding."}, {"name": "File", "description": "Model for file data with validation for source fields and MIME type validation."}], "methods": [{"name": "to_dict", "description": "Converts media objects to dictionary representations, encoding content as needed."}, {"name": "validate_exclusive_audio", "description": "Validator ensuring only one of url or base64_audio is provided for AudioArtifact."}, {"name": "validate_data", "description": "Validator ensuring exactly one source (filepath, content, url) is provided for media objects."}, {"name": "check_at_least_one_source", "description": "Validator ensuring at least one source is provided for File objects."}, {"name": "validate_mime_type", "description": "Validator ensuring mime_type is within allowed types."}, {"name": "from_artifact", "description": "Class method to create Video or Audio objects from their respective artifacts."}, {"name": "file_url_content", "description": "Property to fetch content and mime type from a URL for File objects."}, {"name": "image_url_content", "description": "Property to fetch content from a URL for Image objects."}, {"name": "audio_url_content", "description": "Property to fetch content from a URL for Audio objects."}], "calls": ["httpx.get", "base64.b64decode", "zlib.decompress"], "search-terms": ["Media models", "Artifact classes", "Validation methods", "Media serialization", "External resource fetching", "Content encoding"], "state": 2, "file_id": 507, "knowledge_revision": 2768, "git_revision": "cc5ad96e22a9753e723c64b32527713f4b06faa6", "ctags": [], "filename": "libs/agno/agno/media.py", "hash": "72a1fdaf8817be4320d743ae0a8511e4", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2768": "cc5ad96e22a9753e723c64b32527713f4b06faa6"}]}