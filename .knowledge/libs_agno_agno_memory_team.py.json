{"is_source_file": true, "format": "Python", "description": "This file defines classes and methods related to managing team memory and interactions within a multi-agent system, including serialization, message handling, and memory loading.", "external_files": ["agno/media.py", "agno/memory/agent.py", "agno/memory/classifier.py", "agno/memory/db.py", "agno/memory/manager.py", "agno/memory/memory.py", "agno/models/message.py", "agno/run/response.py", "agno/run/team.py", "agno/utils/log.py"], "external_methods": ["log_debug", "log_info", "log_warning", "Memory.model_validate", "AgentRun.model_validate", "TeamRunResponse.from_dict", "Message.model_validate", "MemoryClassifier.run", "MemoryClassifier.arun", "MemoryDb.read_memories", "Memory.model_validate", "Memory.model_dump", "Memory.model_validate"], "published": ["TeamRun", "TeamMemberInteraction", "TeamContext", "TeamMemory"], "classes": [{"name": "TeamRun", "description": "Represents a team run, including message, member responses, and overall response."}, {"name": "TeamMemberInteraction", "description": "Represents an interaction of a team member with a task and response."}, {"name": "TeamContext", "description": "Holds context information about team member interactions and associated text."}, {"name": "TeamMemory", "description": "Manages team-related memory, interactions, messages, and context, including serialization and memory loading."}], "methods": [{"name": "to_dict", "description": "Serializes the object to a dictionary."}, {"name": "from_dict", "description": "Deserializes a dictionary into an object instance."}, {"name": "add_team_run", "description": "Adds a TeamRun to the memory."}, {"name": "add_system_message", "description": "Adds or updates a system message in the message list."}, {"name": "add_messages", "description": "Adds multiple messages to the message list."}, {"name": "get_messages", "description": "Returns all messages as a list of dictionaries."}, {"name": "get_messages_from_last_n_runs", "description": "Retrieves messages from the last N runs, excluding history."}, {"name": "get_all_messages", "description": "Returns all message pairs (user and assistant) from the runs."}, {"name": "load_user_memories", "description": "Loads memories from the database for the user."}, {"name": "should_update_memory", "description": "Determines if a message should be added to memory based on classifier."}, {"name": "ashould_update_memory", "description": "Asynchronous version of should_update_memory."}, {"name": "update_memory", "description": "Creates and stores a memory from a message."}, {"name": "aupdate_memory", "description": "Asynchronous version of update_memory."}, {"name": "deep_copy", "description": "Creates a deep copy of the TeamMemory instance."}], "calls": ["log_debug", "log_info", "log_warning", "Memory.model_validate", "AgentRun.model_validate", "TeamRunResponse.from_dict", "Message.model_validate", "MemoryClassifier.run", "MemoryClassifier.arun", "MemoryDb.read_memories", "Memory.model_validate", "Memory.model_dump", "Memory.model_validate", "MemoryManager.run", "MemoryManager.arun"], "search-terms": ["TeamMemory", "team context", "team interactions", "multi-agent memory", "team run serialization", "team message handling", "team memory loading"], "state": 2, "file_id": 122, "knowledge_revision": 2375, "git_revision": "e734a753be7fc5baf94d89714e92da93603b9af5", "ctags": [], "filename": "libs/agno/agno/memory/team.py", "hash": "f614a9add07f7bd8371045093fa981f4", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2375": "e734a753be7fc5baf94d89714e92da93603b9af5"}]}