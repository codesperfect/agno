{"is_source_file": true, "format": "Python", "description": "This file defines a MemoryManager class responsible for managing user memories, including generating system prompts, handling memory creation, updating, deletion, and interfacing with a database. It includes methods for synchronous and asynchronous operations, and dynamically constructs database functions for memory operations.", "external_files": ["agno.memory.v2.db.base", "agno.memory.v2.db.schema", "agno.memory.v2.schema", "agno.models.base", "agno.models.message", "agno.tools.function", "agno.utils.log"], "external_methods": ["log_debug", "log_error", "log_warning", "Function.from_callable", "Message(role=\"system\"", "Message(role=\"user\""], "published": ["MemoryManager"], "classes": [{"name": "MemoryManager", "description": "A data class that manages user memories, including generating system prompts, handling memory CRUD operations, and interfacing with a database."}], "methods": [{"name": "determine_tools_for_model", "description": "Sets up tools and functions for the model based on provided callables."}, {"name": "get_system_message", "description": "Constructs and returns a system message with instructions for memory management, optionally including existing memories."}, {"name": "create_or_update_memories", "description": "Synchronously creates or updates memories based on user messages and existing memories, interacting with the database."}, {"name": "acreate_or_update_memories", "description": "Asynchronously creates or updates memories based on user messages and existing memories, interacting with the database."}, {"name": "run_memory_task", "description": "Runs a memory management task based on a string command, interacting with the model and database."}, {"name": "arun_memory_task", "description": "Asynchronously runs a memory management task based on a string command, interacting with the model and database."}, {"name": "_get_db_tools", "description": "Constructs a list of callable functions for database operations related to memories, such as add, update, delete, and clear."}], "calls": ["deepcopy", "MemoryDb.upsert_memory", "MemoryDb.delete_memory", "MemoryDb.clear", "Function.from_callable", "log_debug", "log_warning", "log_error"], "search-terms": ["MemoryManager", "memory management", "user memories", "database interaction", "async memory update", "system prompt construction"], "state": 2, "file_id": 103, "knowledge_revision": 2353, "git_revision": "a06f7136c75c2b5e17ca9e5dd9033b4e422fa6ee", "ctags": [], "filename": "libs/agno/agno/memory/v2/manager.py", "hash": "2e7b88d0c4536795ea4297e9b7198b5d", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2353": "a06f7136c75c2b5e17ca9e5dd9033b4e422fa6ee"}]}