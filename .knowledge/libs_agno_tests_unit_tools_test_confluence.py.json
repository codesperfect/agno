{"is_source_file": true, "format": "Python", "description": "Unit tests for the ConfluenceTools class, testing various methods including initialization, space retrieval, page content management, page creation, and updating, with mocked dependencies.", "external_files": ["atlassian", "pytest", "os"], "external_methods": ["patch", "patch.dict", "patch.object", "MagicMock", "pytest.raises"], "published": ["test_init_with_environment_variables", "test_init_with_constructor_parameters", "test_init_with_missing_credentials", "test_get_all_space_detail", "test_get_space_key_existing", "test_get_space_key_not_found", "test_get_page_content_success", "test_get_page_content_not_found", "test_get_page_content_error", "test_get_all_page_from_space", "test_create_page_success", "test_create_page_with_parent", "test_create_page_error", "test_update_page_success", "test_update_page_error"], "classes": [], "methods": [{"name": "mock_confluence", "description": "Creates a mock Confluence client for testing."}, {"name": "confluence_tools", "description": "Creates a ConfluenceTools instance with mocked dependencies for testing."}, {"name": "test_init_with_environment_variables", "description": "Tests initialization of ConfluenceTools with environment variables."}, {"name": "test_init_with_constructor_parameters", "description": "Tests initialization of ConfluenceTools with constructor parameters."}, {"name": "test_init_with_missing_credentials", "description": "Tests initialization failure when credentials are missing."}, {"name": "test_get_all_space_detail", "description": "Tests retrieval of all space details."}, {"name": "test_get_space_key_existing", "description": "Tests retrieval of an existing space key."}, {"name": "test_get_space_key_not_found", "description": "Tests handling of non-existent space."}, {"name": "test_get_page_content_success", "description": "Tests successful retrieval of page content."}, {"name": "test_get_page_content_not_found", "description": "Tests handling of non-existent page."}, {"name": "test_get_page_content_error", "description": "Tests error handling during page content retrieval."}, {"name": "test_get_all_page_from_space", "description": "Tests retrieval of all pages from a space."}, {"name": "test_create_page_success", "description": "Tests successful page creation."}, {"name": "test_create_page_with_parent", "description": "Tests page creation with a parent page."}, {"name": "test_create_page_error", "description": "Tests error handling during page creation."}, {"name": "test_update_page_success", "description": "Tests successful page update."}, {"name": "test_update_page_error", "description": "Tests error handling during page update."}], "calls": ["patch", "patch.dict", "patch.object", "MagicMock", "pytest.raises", "confluence.get_all_spaces", "confluence.get_page_by_title", "confluence.create_page", "confluence.update_page"], "search-terms": ["ConfluenceTools", "unit tests", "confluence", "pytest", "mock"], "state": 2, "file_id": 659, "knowledge_revision": 2906, "git_revision": "34016d6093b3951b8dc42308e7f015c0c42dfb8a", "ctags": [], "filename": "libs/agno/tests/unit/tools/test_confluence.py", "hash": "17a4f5300516ebd2e1cbaa619c59ef3b", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2906": "34016d6093b3951b8dc42308e7f015c0c42dfb8a"}]}