{"is_source_file": true, "format": "Python", "description": "This file defines a Python class 'ChromaDb' that implements a vector database interface using the chromadb library. It provides methods for creating, checking existence, inserting, upserting, searching, and deleting collections of documents, with support for asynchronous operations and filtering.", "external_files": ["chromadb", "agno.document", "agno.embedder", "agno.reranker.base", "agno.utils.log", "agno.vectordb.base", "agno.vectordb.distance", "agno.embedder.openai"], "external_methods": ["asyncio.to_thread", "log_debug", "log_info", "logger.warning", "logger.error"], "published": ["ChromaDb"], "classes": [{"name": "ChromaDb", "description": "A class implementing a vector database interface using chromadb, supporting collection management, document insertion, search, and deletion."}], "methods": [{"name": "__init__", "description": "Initializes the ChromaDb instance with collection name, embedder, distance metric, path, persistence, reranker, and additional kwargs."}, {"name": "client", "description": "Property that lazily initializes and returns the chromadb client, either persistent or in-memory."}, {"name": "create", "description": "Creates a collection in chromadb, or retrieves it if it already exists."}, {"name": "async_create", "description": "Asynchronously creates the collection by running create() in a thread."}, {"name": "doc_exists", "description": "Checks if a specific Document exists in the collection based on its content."}, {"name": "async_doc_exists", "description": "Asynchronously checks if a Document exists."}, {"name": "name_exists", "description": "Checks if a document with a given name exists in the collection."}, {"name": "async_name_exists", "description": "Asynchronously checks if a document with a given name exists."}, {"name": "insert", "description": "Inserts a list of Documents into the collection, embedding content and handling metadata."}, {"name": "async_insert", "description": "Asynchronously inserts documents."}, {"name": "upsert_available", "description": "Indicates that upsert operation is supported."}, {"name": "upsert", "description": "Upserts a list of Documents into the collection, embedding and updating existing entries."}, {"name": "async_upsert", "description": "Asynchronously upserts documents."}, {"name": "search", "description": "Performs a vector similarity search with optional filters, returning matching Documents."}, {"name": " _convert_filters", "description": "Converts simple filter dictionaries into chromadb filter format."}, {"name": "async_search", "description": "Performs an asynchronous search."}, {"name": "drop", "description": "Deletes the collection."}, {"name": "async_drop", "description": "Asynchronously drops the collection."}, {"name": "exists", "description": "Checks if the collection exists."}, {"name": "async_exists", "description": "Asynchronously checks if the collection exists."}, {"name": "get_count", "description": "Returns the number of documents in the collection."}, {"name": "optimize", "description": "Not implemented, placeholder for optimization."}, {"name": "delete", "description": "Deletes the collection."}], "calls": ["asyncio.to_thread", "log_debug", "log_info", "logger.warning", "logger.error", "self.client.get_collection", "self.client.create_collection", "self.client.delete_collection", "self.client.get_collection", "self._collection.add", "self._collection.upsert", "self._collection.query", "self._collection.count"], "search-terms": ["ChromaDb", "vector database", "chromadb collection", "async create", "async insert", "async search", "vector similarity search", "document existence", "collection management"], "state": 2, "file_id": 578, "knowledge_revision": 2833, "git_revision": "167629ed14b183b3184483e3b7ce1e40719a4e38", "ctags": [], "filename": "libs/agno/agno/vectordb/chroma/chromadb.py", "hash": "37d44d18a14dda2e64882d2dfcfe9670", "format-version": 4, "code-base-name": "https://github.com/codesperfect/agno.git:main", "revision_history": [{"2833": "167629ed14b183b3184483e3b7ce1e40719a4e38"}]}